{
  "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
  "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
  "type": "microsoft.authorization/policysetdefinitions",
  "tenantId": "",
  "kind": "policysetdefinitions",
  "location": "global",
  "resourceGroup": "",
  "subscriptionId": "",
  "managedBy": "",
  "sku": null,
  "plan": null,
  "properties": {
    "displayName": "Microsoft cloud security benchmark",
    "policyType": "BuiltIn",
    "description": "The Microsoft cloud security benchmark initiative represents the policies and controls implementing security recommendations defined in Microsoft cloud security benchmark, see https://aka.ms/azsecbm. This also serves as the Microsoft Defender for Cloud default policy initiative. You can directly assign this initiative, or manage its policies and compliance results within Microsoft Defender for Cloud.",
    "metadata": {
      "category": "Security Center",
      "lastSyncedToArgOn": "2023-10-31T03:30:01.2792Z",
      "version": "57.23.1"
    },
    "version": null,
    "parameters": {
      "useServicePrincipalToProtectSubscriptionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "[Deprecated: With Cloud Services (classic) retiring (see https://azure.microsoft.com/updates/cloud-services-retirement-announcement), there will no longer be a need for this assessment as management certificates will be obsolete.] Management certificates allow anyone who authenticates with them to manage the subscription(s) they are associated with. To manage subscriptions more securely, use of service principals with Resource Manager is recommended to limit the impact of a certificate compromise.",
          "displayName": "[Deprecated]: Service principals should be used to protect your subscriptions instead of management certificates",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "updateOsVersionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Keeping the operating system (OS) on the most recent supported version for your cloud service roles enhances the systems security posture.",
          "displayName": "[Deprecated]: Operating system version should be the most current version for your cloud service roles",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "resolveLogAnalyticsHealthIssuesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Security Center uses the Log Analytics agent, formerly known as the Microsoft Monitoring Agent (MMA). To make sure your virtual machines are successfully monitored, you need to make sure the agent is installed on the virtual machines and properly collects security events to the configured workspace.",
          "displayName": "[Deprecated]: Log Analytics agent health issues should be resolved on your machines",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "installLogAnalyticsAgentOnVmMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "This policy audits any Windows/Linux virtual machines (VMs) if the Log Analytics agent is not installed which Security Center uses to monitor for security vulnerabilities and threats",
          "displayName": "Log Analytics agent should be installed on your virtual machine for Microsoft Defender for Cloud monitoring"
        },
        "type": "String",
        "schema": null
      },
      "installLogAnalyticsAgentOnVmssMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Security Center collects data from your Azure virtual machines (VMs) to monitor for security vulnerabilities and threats.",
          "displayName": "Log Analytics agent should be installed on your virtual machine scale sets for Microsoft Defender for Cloud monitoring"
        },
        "type": "String",
        "schema": null
      },
      "certificatesValidityPeriodMonitoringEffect": {
        "allowedValues": [
          "audit",
          "deny",
          "disabled"
        ],
        "defaultValue": "disabled",
        "metadata": {
          "description": "Enable or disable manage certificate validity period.",
          "displayName": "Manage certificate validity period"
        },
        "type": "String",
        "schema": null
      },
      "certificatesValidityPeriodInMonths": {
        "allowedValues": null,
        "defaultValue": 12,
        "metadata": {
          "description": "The limit to how long a certificate may be valid for. Certificates with lengthy validity periods aren't best practice.",
          "displayName": "The maximum validity period in months of managed certificate"
        },
        "type": "Integer",
        "schema": null
      },
      "secretsExpirationSetEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable key vault secrets should have expiration dates set.",
          "displayName": "Key Vault secrets should have expiration dates set"
        },
        "type": "String",
        "schema": null
      },
      "keysExpirationSetEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable key vault keys should have expiration dates set.",
          "displayName": "Key Vault keys should have expiration dates set"
        },
        "type": "String",
        "schema": null
      },
      "azurePolicyforWindowsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machines reporting that the Guest Configuration extension should be installed",
          "displayName": "Guest Configuration extension should be installed on virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "gcExtOnVMWithNoSAMIMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Virtual machines' Guest Configuration extension should be deployed with system-assigned managed identity",
          "displayName": "Virtual machines' Guest Configuration extension should be deployed with system-assigned managed identity"
        },
        "type": "String",
        "schema": null
      },
      "windowsDefenderExploitGuardMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machines reporting that Windows Defender Exploit Guard is enabled",
          "displayName": "Windows Defender Exploit Guard should be enabled on your Windows virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "windowsGuestConfigBaselinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machines reporting Windows Baselines in Guest Config",
          "displayName": "Vulnerabilities in security configuration on your Windows machines should be remediated (powered by Guest Config)"
        },
        "type": "String",
        "schema": null
      },
      "linuxGuestConfigBaselinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machines reporting Linux Baselines in Guest Config",
          "displayName": "Vulnerabilities in security configuration on your Linux machines should be remediated (powered by Guest Config)"
        },
        "type": "String",
        "schema": null
      },
      "vmssSystemUpdatesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machine scale sets reporting of system updates",
          "displayName": "System updates on virtual machine scale sets should be installed"
        },
        "type": "String",
        "schema": null
      },
      "vmssEndpointProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machine scale sets endpoint protection monitoring",
          "displayName": "Endpoint protection solution should be installed on virtual machine scale sets"
        },
        "type": "String",
        "schema": null
      },
      "vmssOsVulnerabilitiesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable virtual machine scale sets OS vulnerabilities monitoring",
          "displayName": "Vulnerabilities in security configuration on your virtual machine scale sets should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "systemUpdatesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable reporting of system updates",
          "displayName": "System updates should be installed on your machines"
        },
        "type": "String",
        "schema": null
      },
      "systemUpdatesV2MonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable reporting of system updates (powered by Update Center)",
          "displayName": "System updates should be installed on your machines (powered by Update Center)"
        },
        "type": "String",
        "schema": null
      },
      "systemUpdatesAutoAssessmentModeEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of assessment mode",
          "displayName": "Machines should be configured to periodically check for missing system updates"
        },
        "type": "String",
        "schema": null
      },
      "systemConfigurationsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable OS vulnerabilities monitoring (based on a configured baseline)",
          "displayName": "Vulnerabilities in security configuration on your machines should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "endpointProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable endpoint protection monitoring",
          "displayName": "Monitor missing Endpoint Protection in Microsoft Defender for Cloud"
        },
        "type": "String",
        "schema": null
      },
      "diskEncryptionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring for VM disk encryption",
          "displayName": "Virtual machines should encrypt temp disks, caches, and data flows between Compute and Storage resources"
        },
        "type": "String",
        "schema": null
      },
      "gcLinuxDiskEncryptionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the guest configuration monitoring for disk encryption on Linux machines",
          "displayName": "Linux virtual machines should enable Azure Disk Encryption or EncryptionAtHost"
        },
        "type": "String",
        "schema": null
      },
      "gcWindowsDiskEncryptionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the guest configuration monitoring for disk encryption on Windows machines",
          "displayName": "Windows virtual machines should enable Azure Disk Encryption or EncryptionAtHost"
        },
        "type": "String",
        "schema": null
      },
      "networkSecurityGroupsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable monitoring of network security groups with permissive rules",
          "displayName": "[Deprecated]: Monitor network security groups",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "networkSecurityGroupsOnSubnetsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable monitoring of NSGs on subnets",
          "displayName": "Network Security Groups on the subnet level should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "networkSecurityGroupsOnVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of NSGs on VMs",
          "displayName": "Internet-facing virtual machines should be protected with network security groups"
        },
        "type": "String",
        "schema": null
      },
      "networkSecurityGroupsOnInternalVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of NSGs on VMs",
          "displayName": "Non-internet-facing virtual machines should be protected with network security groups"
        },
        "type": "String",
        "schema": null
      },
      "webApplicationFirewallMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of unprotected web applications",
          "displayName": "[Deprecated]: Web ports should be restricted on Network Security Groups associated to your VM",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "nextGenerationFirewallMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable overly permissive inbound NSG rules monitoring.",
          "displayName": "All network ports should be restricted on network security groups associated to your virtual machine"
        },
        "type": "String",
        "schema": null
      },
      "vulnerabilityAssesmentMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the detection of VM vulnerabilities by a vulnerability assessment solution",
          "displayName": "[Deprecated]: Vulnerabilities should be remediated by a Vulnerability Assessment solution",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "serverVulnerabilityAssessmentEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the detection of virtual machine vulnerabilities by Microsoft Defender for Cloud vulnerability assessment",
          "displayName": "A vulnerability assessment solution should be enabled on your virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "storageEncryptionMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of blob encryption for storage accounts",
          "displayName": "[Deprecated]: Audit missing blob encryption for storage accounts",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "jitNetworkAccessMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of network just-in-time access",
          "displayName": "Management ports of virtual machines should be protected with just-in-time network access control"
        },
        "type": "String",
        "schema": null
      },
      "adaptiveApplicationControlsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable application controls to define the list of known-safe applications running on your machines, and alert you when other applications run",
          "displayName": "Adaptive application controls for defining safe applications should be enabled on your machines"
        },
        "type": "String",
        "schema": null
      },
      "adaptiveApplicationControlsUpdateMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring for changes in behavior on groups of machines configured for auditing by Microsoft Defender for Cloud's adaptive application controls",
          "displayName": "Allowlist rules in your adaptive application control policy should be updated"
        },
        "type": "String",
        "schema": null
      },
      "sqlAuditingMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of unaudited SQL databases",
          "displayName": "[Deprecated]: Monitor unaudited SQL servers in Microsoft Defender for Cloud",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "sqlEncryptionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of unencrypted SQL databases",
          "displayName": "[Deprecated]: Monitor unencrypted SQL databases in Microsoft Defender for Cloud",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "sqlDbEncryptionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of unencrypted SQL databases",
          "displayName": "Transparent Data Encryption on SQL databases should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "sqlServerAuditingMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of unaudited SQL Servers",
          "displayName": "Auditing should be enabled on advanced data security settings on SQL Server"
        },
        "type": "String",
        "schema": null
      },
      "sqlServerAuditingActionsAndGroupsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of auditing policy Action-Groups and Actions setting",
          "displayName": "[Deprecated]: SQL Auditing settings should have Action-Groups configured to capture critical activities",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "SqlServerAuditingRetentionDaysMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of SQL servers with auditing retention period less than 90",
          "displayName": "[Deprecated]: SQL servers should be configured with auditing retention days greater than 90 days",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInAppServiceMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Azure App Services",
          "displayName": "[Deprecated]: Monitor resource logs in Azure App Services",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInSelectiveAppServicesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Azure App Services",
          "displayName": "[Deprecated]: Resource logs in App Services should be enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "encryptionOfAutomationAccountMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of automation account encryption",
          "displayName": "Automation account variables should be encrypted"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInBatchAccountMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Batch accounts",
          "displayName": "Resource logs in Batch accounts should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInBatchAccountRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) for logs in Batch accounts"
        },
        "type": "String",
        "schema": null
      },
      "metricAlertsInBatchAccountMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of metric alerts in Batch accounts",
          "displayName": "[Deprecated]: Metric alert rules should be configured on Batch accounts",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "classicComputeVMsMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of classic compute VMs",
          "displayName": "Virtual machines should be migrated to new Azure Resource Manager resources"
        },
        "type": "String",
        "schema": null
      },
      "classicStorageAccountsMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of classic storage accounts",
          "displayName": "Storage accounts should be migrated to new Azure Resource Manager resources"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInDataLakeAnalyticsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Data Lake Analytics accounts",
          "displayName": "Resource logs in Data Lake Analytics should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInDataLakeAnalyticsRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Data Lake Analytics accounts"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInDataLakeStoreMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Data Lake Store accounts",
          "displayName": "Resource logs in Azure Data Lake Store should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInDataLakeStoreRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Data Lake Store accounts"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInEventHubMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Event Hub accounts",
          "displayName": "Resource logs in Event Hub should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInEventHubRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Event Hub accounts"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInKeyVaultMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Key Vault vaults",
          "displayName": "Resource logs in Key Vault should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInKeyVaultRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Key Vault vaults"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInKubernetesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Kubernetes managed clusters. Enabling Azure Kubernetes Service's resource logs can help recreate activity trails when investigating future security incidents",
          "displayName": "Resource logs in Azure Kubernetes Service should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInKubernetesRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Kubernetes managed clusters"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInLogicAppsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Logic Apps workflows",
          "displayName": "Resource logs in Logic Apps should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInLogicAppsRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Logic Apps workflows"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInRedisCacheMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Azure Redis Cache",
          "displayName": "Only secure connections to your Redis Cache should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInSearchServiceMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Azure Search service",
          "displayName": "Resource logs in Search services should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInSearchServiceRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Azure Search service"
        },
        "type": "String",
        "schema": null
      },
      "aadAuthenticationInServiceFabricMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of Azure Active Directory for client authentication in Service Fabric",
          "displayName": "Service Fabric clusters should only use Azure Active Directory for client authentication"
        },
        "type": "String",
        "schema": null
      },
      "clusterProtectionLevelInServiceFabricMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of cluster protection level in Service Fabric",
          "displayName": "Service Fabric clusters should have the ClusterProtectionLevel property set to EncryptAndSign"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInServiceBusMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Service Bus",
          "displayName": "Resource logs in Service Bus should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInServiceBusRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Service Bus"
        },
        "type": "String",
        "schema": null
      },
      "namespaceAuthorizationRulesInServiceBusMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Service Bus namespace authorization rules",
          "displayName": "[Deprecated]: All authorization rules except RootManageSharedAccessKey should be removed from Service Bus namespace",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "aadAuthenticationInSqlServerMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of an Azure AD admininistrator for SQL server",
          "displayName": "An Azure Active Directory administrator should be provisioned for SQL servers"
        },
        "type": "String",
        "schema": null
      },
      "secureTransferToStorageAccountMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of secure transfer to storage account",
          "displayName": "Secure transfer to storage accounts should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInStreamAnalyticsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Stream Analytics",
          "displayName": "Resource logs in Azure Stream Analytics should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInStreamAnalyticsRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in Stream Analytics"
        },
        "type": "String",
        "schema": null
      },
      "useRbacRulesMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of using built-in RBAC rules",
          "displayName": "Audit usage of custom RBAC rules"
        },
        "type": "String",
        "schema": null
      },
      "disableUnrestrictedNetworkToStorageAccountMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of network access to storage account",
          "displayName": "Audit unrestricted network access to storage accounts"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInServiceFabricMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in Service Fabric",
          "displayName": "[Deprecated]: Resource logs in Virtual Machine Scale Sets should be enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "accessRulesInEventHubNamespaceMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of access rules in Event Hub namespaces",
          "displayName": "[Deprecated]: All authorization rules except RootManageSharedAccessKey should be removed from Event Hub namespace",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "accessRulesInEventHubMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of access rules in Event Hubs",
          "displayName": "[Deprecated]: Authorization rules on the Event Hub instance should be defined",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "sqlDbVulnerabilityAssesmentMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of vulnerability assessment scan results and recommendations for how to remediate database vulnerabilities.",
          "displayName": "SQL databases should have vulnerability findings resolved"
        },
        "type": "String",
        "schema": null
      },
      "serverSqlDbVulnerabilityAssesmentMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "SQL Vulnerability assessment scans your database for security vulnerabilities, and exposes any deviations from best practices such as misconfigurations, excessive permissions, and unprotected sensitive data. Resolving the vulnerabilities found can greatly improve your database security posture.",
          "displayName": "SQL servers on machines should have vulnerability findings resolved"
        },
        "type": "String",
        "schema": null
      },
      "sqlDbDataClassificationMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of sensitive data classification in databases.",
          "displayName": "[Deprecated]: Sensitive data in your SQL databases should be classified",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityDesignateLessThanOwnersMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of maximum owners in subscription",
          "displayName": "A maximum of 3 owners should be designated for your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityDesignateMoreThanOneOwnerMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of minimum owners in subscription",
          "displayName": "There should be more than one owner assigned to your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityEnableMFAForOwnerPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of MFA for accounts with owner permissions in subscription",
          "displayName": "MFA should be enabled on accounts with owner permissions on your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityEnableMFAForAccountsWithOwnerPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of MFA for accounts with owner permissions in subscription",
          "displayName": "[Deprecated]: Accounts with owner permissions on Azure resources should be MFA enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityEnableMFAForWritePermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of MFA for accounts with write permissions in subscription",
          "displayName": "MFA should be enabled accounts with write permissions on your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityEnableMFAForAccountsWithWritePermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of MFA for accounts with write permissions in subscription",
          "displayName": "[Deprecated]: Accounts with write permissions on Azure resources should be MFA enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityEnableMFAForReadPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of MFA for accounts with read permissions in subscription",
          "displayName": "MFA should be enabled on accounts with read permissions on your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityEnableMFAForAccountsWithReadPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of MFA for accounts with read permissions in subscription",
          "displayName": "[Deprecated]: Accounts with read permissions on Azure resources should be MFA enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of deprecated acounts with owner permissions in subscription",
          "displayName": "Deprecated accounts with owner permissions should be removed from your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveBlockedAccountsWithOwnerPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of deprecated acounts with owner permissions in subscription",
          "displayName": "[Deprecated]: Blocked accounts with owner permissions on Azure resources should be removed",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveDeprecatedAccountMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of deprecated acounts in subscription",
          "displayName": "Deprecated accounts should be removed from your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveBlockedAccountsWithReadWritePermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of deprecated acounts in subscription",
          "displayName": "[Deprecated]: Blocked accounts with read and write permissions on Azure resources should be removed",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of external acounts with owner permissions in subscription",
          "displayName": "External accounts with owner permissions should be removed from your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveGuestAccountsWithOwnerPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of external acounts with owner permissions in subscription",
          "displayName": "[Deprecated]: Guest accounts with owner permissions on Azure resources should be removed",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveExternalAccountWithWritePermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of external acounts with write permissions in subscription",
          "displayName": "External accounts with write permissions should be removed from your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveGuestAccountsWithWritePermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of external acounts with write permissions in subscription",
          "displayName": "[Deprecated]: Guest accounts with write permissions on Azure resources should be removed",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveExternalAccountWithReadPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of external acounts with read permissions in subscription",
          "displayName": "External accounts with read permissions should be removed from your subscription"
        },
        "type": "String",
        "schema": null
      },
      "identityRemoveGuestAccountsWithReadPermissionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of external acounts with read permissions in subscription",
          "displayName": "[Deprecated]: Guest accounts with read permissions on Azure resources should be removed",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppConfigureIPRestrictionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of IP restrictions for API App",
          "displayName": "[Deprecated]: Monitor Configure IP restrictions for API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppConfigureIPRestrictionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of IP restrictions for Function App",
          "displayName": "[Deprecated]: Monitor Configure IP restrictions for Function App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppConfigureIPRestrictionsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of IP restrictions for Web App",
          "displayName": "[Deprecated]: Monitor Configure IP restrictions for Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppDisableRemoteDebuggingMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of remote debugging for API App",
          "displayName": "[Deprecated]: Remote debugging should be turned off for API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppDisableRemoteDebuggingMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of remote debugging for Function App",
          "displayName": "Remote debugging should be turned off for Function App"
        },
        "type": "String",
        "schema": null
      },
      "webAppDisableRemoteDebuggingMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of remote debugging for Web App",
          "displayName": "Remote debugging should be turned off for Web Application"
        },
        "type": "String",
        "schema": null
      },
      "apiAppAuditFtpsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable FTPS enforcement for enhanced security",
          "displayName": "[Deprecated]: FTPS should be required in your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppAuditFtpsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable FTPS enforcement for enhanced security",
          "displayName": "[Deprecated]: FTPS should be required in your Function App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppAuditFtpsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable FTPS enforcement for enhanced security",
          "displayName": "[Deprecated]: FTPS should be required in your Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppUseManagedIdentityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "[Deprecated]: A managed identity should be used in your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppUseManagedIdentityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "[Deprecated]: A managed identity should be used in your Function App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUseManagedIdentityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "[Deprecated]: A managed identity should be used in your Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppRequireLatestTlsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Upgrade to the latest TLS version",
          "displayName": "[Deprecated]: Latest TLS version should be used in your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppRequireLatestTlsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Upgrade to the latest TLS version",
          "displayName": "[Deprecated]: Latest TLS version should be used in your Function App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppRequireLatestTlsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Upgrade to the latest TLS version",
          "displayName": "[Deprecated]: Latest TLS version should be used in your Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppDisableWebSocketsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of web sockets for API App",
          "displayName": "[Deprecated]: Monitor disable web sockets for API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppDisableWebSocketsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of web sockets for Function App",
          "displayName": "[Deprecated]: Monitor disable web sockets for Function App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppDisableWebSocketsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of web sockets for Web App",
          "displayName": "[Deprecated]: Monitor disable web sockets for Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppEnforceHttpsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of the use of HTTPS in API App",
          "displayName": "[Deprecated]: API App should only be accessible over HTTPS",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppEnforceHttpsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of the use of HTTPS in function App",
          "displayName": "[Deprecated]: Function App should only be accessible over HTTPS",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppEnforceHttpsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of the use of HTTPS in Web App",
          "displayName": "[Deprecated]: Web Application should only be accessible over HTTPS",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppEnforceHttpsMonitoringEffectV2": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of the use of HTTPS in API App V2",
          "displayName": "[Deprecated]: API App should only be accessible over HTTPS V2",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppEnforceHttpsMonitoringEffectV2": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of the use of HTTPS in function App V2",
          "displayName": "Function App should only be accessible over HTTPS V2"
        },
        "type": "String",
        "schema": null
      },
      "webAppEnforceHttpsMonitoringEffectV2": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of the use of HTTPS in Web App V2",
          "displayName": "Web Application should only be accessible over HTTPS V2"
        },
        "type": "String",
        "schema": null
      },
      "apiAppRestrictCORSAccessMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of CORS restrictions for API App",
          "displayName": "[Deprecated]: CORS should not allow every resource to access your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppRestrictCORSAccessMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of CORS restrictions for API Function",
          "displayName": "CORS should not allow every resource to access your Function App"
        },
        "type": "String",
        "schema": null
      },
      "webAppRestrictCORSAccessMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of CORS restrictions for API Web",
          "displayName": "CORS should not allow every resource to access your Web Application"
        },
        "type": "String",
        "schema": null
      },
      "apiAppUsedCustomDomainsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of custom domain use in API App",
          "displayName": "[Deprecated]: Monitor the custom domain use in API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppUsedCustomDomainsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of custom domain use in Function App",
          "displayName": "[Deprecated]: Monitor the custom domain use in Function App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUsedCustomDomainsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of custom domain use in Web App",
          "displayName": "[Deprecated]: Monitor the custom domain use in Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppUsedLatestDotNetMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of .NET version in API App",
          "displayName": "[Deprecated]: Monitor use latest .NET in API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUsedLatestDotNetMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of .NET version in Web App",
          "displayName": "[Deprecated]: Monitor use latest .NET in Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppUsedLatestJavaMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Java version in API App",
          "displayName": "[Deprecated]: Monitor use latest Java in API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUsedLatestJavaMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Java version in Web App",
          "displayName": "[Deprecated]: Monitor use latest Java in Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUsedLatestNodeJsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Node.js version in Web App",
          "displayName": "[Deprecated]: Monitor use latest Node.js in Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppUsedLatestPHPMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of PHP version in API App",
          "displayName": "[Deprecated]: Monitor use latest PHP in API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUsedLatestPHPMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of PHP version in Web App",
          "displayName": "[Deprecated]: Monitor use latest PHP in Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "apiAppUsedLatestPythonMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Python version in API App",
          "displayName": "[Deprecated]: Monitor use latest Python in API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "webAppUsedLatestPythonMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Python version in Web App",
          "displayName": "[Deprecated]: Monitor use latest Python in Web App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "vnetEnableDDoSProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of DDoS protection for virtual network",
          "displayName": "Azure DDoS Protection Standard should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInIoTHubMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of resource logs in IoT Hubs",
          "displayName": "Resource logs in IoT Hub should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "diagnosticsLogsInIoTHubRetentionDays": {
        "allowedValues": null,
        "defaultValue": "1",
        "metadata": {
          "description": "The required resource logs retention period in days",
          "displayName": "Required retention (in days) of logs in IoT Hub accounts"
        },
        "type": "String",
        "schema": null
      },
      "sqlServerAdvancedDataSecurityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of SQL servers without Advanced Data Security",
          "displayName": "Azure Defender for SQL should be enabled for unprotected Azure SQL servers"
        },
        "type": "String",
        "schema": null
      },
      "arcEnabledSqlServerDefenderStatusEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of the protection status for Arc-enabled SQL Servers",
          "displayName": "Microsoft Defender for SQL status should be protected for Arc-enabled SQL Servers"
        },
        "type": "String",
        "schema": null
      },
      "sqlManagedInstanceAdvancedDataSecurityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of each SQL Managed Instance without advanced data security.",
          "displayName": "Azure Defender for SQL should be enabled for unprotected SQL Managed Instances"
        },
        "type": "String",
        "schema": null
      },
      "sqlServerAdvancedDataSecurityEmailsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring that advanced data security settings for SQL server contain at least one email address to receive security alerts",
          "displayName": "[Deprecated]: Advanced data security settings for SQL server should contain an email address to receive security alerts",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "sqlManagedInstanceAdvancedDataSecurityEmailsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring that advanced data security settings for SQL Managed Instance contain at least one email address to receive security alerts.",
          "displayName": "[Deprecated]: Advanced data security settings for SQL Managed Instance should contain an email address to receive security alerts",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "sqlServerAdvancedDataSecurityEmailAdminsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable auditing that 'email notification to admins and subscription owners' is enabled in the SQL Server advanced threat protection settings. This ensures that any detections of anomalous activities on SQL server are reported as soon as possible to the admins.",
          "displayName": "[Deprecated]: Email notifications to admins and subscription owners should be enabled in SQL server advanced data security settings",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "sqlManagedInstanceAdvancedDataSecurityEmailAdminsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable auditing that 'email notification to admins and subscription owners' is enabled in SQL Managed Instance advanced threat protection settings. This setting ensures that any detections of anomalous activities on SQL Managed Instance are reported as soon as possible to the admins.",
          "displayName": "[Deprecated]: Email notifications to admins and subscription owners should be enabled in SQL Managed Instance advanced data security settings",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "kubernetesServiceRbacEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of Kubernetes Services without RBAC enabled",
          "displayName": "Role-Based Access Control (RBAC) should be used on Kubernetes Services"
        },
        "type": "String",
        "schema": null
      },
      "kubernetesServicePspEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Kubernetes Services without Pod Security Policy enabled",
          "displayName": "[Deprecated]: Pod Security Policies should be defined on Kubernetes Services",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "kubernetesServiceAuthorizedIPRangesEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of Kubernetes Services without Authorized IP Ranges enabled",
          "displayName": "Authorized IP ranges should be defined on Kubernetes Services"
        },
        "type": "String",
        "schema": null
      },
      "kubernetesServiceVersionUpToDateMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of the Kubernetes Services with versions that contain known vulnerabilities",
          "displayName": "[Deprecated]: Kubernetes Services should be upgraded to a non vulnerable Kubernetes version",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "vulnerabilityAssessmentOnManagedInstanceMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Audit each SQL Managed Instance which doesn't have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
          "displayName": "Vulnerability assessment should be enabled on SQL Managed Instance"
        },
        "type": "String",
        "schema": null
      },
      "vulnerabilityAssessmentOnServerMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Audit Azure SQL servers which do not have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
          "displayName": "Vulnerability assessment should be enabled on your SQL servers"
        },
        "type": "String",
        "schema": null
      },
      "threatDetectionTypesOnManagedInstanceMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "It's recommended to enable all Advanced Threat Protection types on your SQL Managed Instance. Enabling all types protects against SQL injection, database vulnerabilities, and any other anomalous activities.",
          "displayName": "[Deprecated]: Advanced Threat Protection types should be set to 'All' in SQL Managed Instance advanced data security settings",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "threatDetectionTypesOnServerMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "It is recommended to enable all Advanced Threat Protection types on your SQL servers. Enabling all types protects against SQL injection, database vulnerabilities, and any other anomalous activities.",
          "displayName": "[Deprecated]: Advanced Threat Protection types should be set to 'All' in SQL server Advanced Data Security settings",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "adaptiveNetworkHardeningsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of Internet-facing virtual machines for Network Security Group traffic hardening recommendations",
          "displayName": "Adaptive network hardening recommendations should be applied on internet facing virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "restrictAccessToManagementPortsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of open management ports on Virtual Machines",
          "displayName": "Management ports should be closed on your virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "restrictAccessToAppServicesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of permissive network access to app-services",
          "displayName": "[Deprecated]: Access to App Services should be restricted",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "disableIPForwardingMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of IP forwarding on virtual machines",
          "displayName": "IP Forwarding on your virtual machine should be disabled"
        },
        "type": "String",
        "schema": null
      },
      "ensureServerTDEIsEncryptedWithYourOwnKeyMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Transparent Data Encryption (TDE) with your own key support. TDE with your own key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties.",
          "displayName": "[Deprecated]: SQL server TDE protector should be encrypted with your own key",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureManagedInstanceTDEIsEncryptedWithYourOwnKeyMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Transparent Data Encryption (TDE) with your own key support. TDE with your own key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties.",
          "displayName": "[Deprecated]: SQL Managed Instance TDE protector should be encrypted with your own key",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureServerTDEIsEncryptedWithYourOwnKeyWithDenyMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Transparent Data Encryption (TDE) with your own key support. TDE with your own key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties.",
          "displayName": "SQL server TDE protector should be encrypted with your own key"
        },
        "type": "String",
        "schema": null
      },
      "ensureManagedInstanceTDEIsEncryptedWithYourOwnKeyWithDenyMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable the monitoring of Transparent Data Encryption (TDE) with your own key support. TDE with your own key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties.",
          "displayName": "SQL Managed Instance TDE protector should be encrypted with your own key"
        },
        "type": "String",
        "schema": null
      },
      "containerBenchmarkMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable container benchmark monitoring",
          "displayName": "Vulnerabilities in container security configurations should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "ASCDependencyAgentAuditWindowsEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Dependency Agent for Windows VMs",
          "displayName": "Audit Dependency Agent for Windows VMs monitoring"
        },
        "type": "String",
        "schema": null
      },
      "ASCDependencyAgentAuditLinuxEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Dependency Agent for Linux VMs",
          "displayName": "Audit Dependency Agent for Linux VMs monitoring"
        },
        "type": "String",
        "schema": null
      },
      "AzureFirewallEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable All Internet traffic should be routed via your deployed Azure Firewall",
          "displayName": "All Internet traffic should be routed via your deployed Azure Firewall"
        },
        "type": "String",
        "schema": null
      },
      "ArcWindowsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Log Analytics agent should be installed on your  Windows Azure Arc machines",
          "displayName": "Log Analytics agent should be installed on your  Windows Azure Arc machines"
        },
        "type": "String",
        "schema": null
      },
      "ArcLinuxMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Log Analytics agent should be installed on your Linux Azure Arc machines",
          "displayName": "Log Analytics agent should be installed on your Linux Azure Arc machines"
        },
        "type": "String",
        "schema": null
      },
      "keyVaultsAdvancedDataSecurityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Azure Defender for Key Vault",
          "displayName": "Azure Defender for Key Vault should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "sqlServersAdvancedDataSecurityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Azure Defender for Azure SQL Database servers",
          "displayName": "Azure Defender for Azure SQL Database servers should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "sqlServersVirtualMachinesAdvancedDataSecurityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Azure Defender for SQL servers on Machines",
          "displayName": "Azure Defender for SQL servers on machines should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "storageAccountsAdvancedDataSecurityMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Azure Defender for storage",
          "displayName": "Azure Defender for Storage should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "appServicesAdvancedThreatProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Azure Defender for App Service",
          "displayName": "Azure Defender for App Services should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "containerRegistryAdvancedThreatProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable Azure Defender for container registries",
          "displayName": "[Deprecated]: Azure Defender for container registries should be enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "kubernetesServiceAdvancedThreatProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable Azure Defender for Kubernetes",
          "displayName": "[Deprecated]: Azure Defender for Kubernetes should be enabled",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "containersAdvancedThreatProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Microsoft Defender for Containers",
          "displayName": "Microsoft Defender for Containers should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "virtualMachinesAdvancedThreatProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable Azure Defender for servers",
          "displayName": "Azure Defender for servers should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "azurePolicyAddonStatusEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable reporting of the Azure Policy Add-on is enabled on Azure Kubernetes managed cluster",
          "displayName": "Azure Policy Add-on for Kubernetes should be installed and enabled on Azure Kubernetes Service (AKS) clusters"
        },
        "type": "String",
        "schema": null
      },
      "arcEnabledKubernetesClustersShouldHaveAzurePolicyExtensionInstalledEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of Arc enabled Kubernetes clusters without Azure Policy's extension installed",
          "displayName": "Azure Arc enabled Kubernetes clusters should have Azure Policy's extension installed"
        },
        "type": "String",
        "schema": null
      },
      "excludedImagesInKubernetesCluster": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "The list of InitContainers and Containers to exclude from Kubernetes container related policy evaluation. It will apply to all container related policies except 'Container images should be deployed from trusted registries only' and 'Kubernetes clusters should gate deployment of vulnerable images'. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
          "displayName": "Kubernetes image to exclude from monitoring of all container related polices"
        },
        "type": "Array",
        "schema": null
      },
      "allowedContainerImagesInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of allowed container images in Kubernetes clusters",
          "displayName": "Container images should be deployed from trusted registries only"
        },
        "type": "String",
        "schema": null
      },
      "allowedContainerImagesInKubernetesClusterRegex": {
        "allowedValues": null,
        "defaultValue": "^(.+){0}$",
        "metadata": {
          "description": "The RegEx rule used to match allowed container image field in a Kubernetes cluster. For example, to allow any Azure Container Registry image by matching partial path: ^[^\\/]+\\.azurecr\\.io\\/.+$ and for multiple registries: ^([^\\/]+\\.azurecr\\.io|registry\\.io)\\/.+$",
          "displayName": "Allowed registry or registries regex"
        },
        "type": "String",
        "schema": null
      },
      "allowedContainerImagesNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of allowed container images in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of allowed container images"
        },
        "type": "Array",
        "schema": null
      },
      "privilegedContainersShouldBeAvoidedEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of privileged containers in Kubernetes clusters",
          "displayName": "Privileged containers should be avoided"
        },
        "type": "String",
        "schema": null
      },
      "privilegedContainerNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of privileged containers in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of privileged containers"
        },
        "type": "Array",
        "schema": null
      },
      "allowedContainerPortsInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of allowed container ports in Kubernetes clusters",
          "displayName": "[Deprecated]: Containers should listen on allowed ports only",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "allowedContainerPortsInKubernetesClusterPorts": {
        "allowedValues": null,
        "defaultValue": [
          "-1"
        ],
        "metadata": {
          "description": "List of container ports allowed in Kubernetes cluster. Use ; to separate values",
          "displayName": "[Deprecated]: Allowed container ports list in Kubernetes cluster",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "allowedContainerPortsInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of allowed container ports in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "[Deprecated]: Kubernetes namespaces to exclude from monitoring of allowed container port",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "allowedServicePortsInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of allowed service ports in Kubernetes clusters",
          "displayName": "Services should listen on allowed ports only"
        },
        "type": "String",
        "schema": null
      },
      "allowedservicePortsInKubernetesClusterPorts": {
        "allowedValues": null,
        "defaultValue": [
          "-1"
        ],
        "metadata": {
          "description": "The list of service ports allowed in a Kubernetes cluster. Array only accepts strings. Example: [\"443\", \"80\"]",
          "displayName": "Allowed service ports list in Kubernetes cluster"
        },
        "type": "Array",
        "schema": null
      },
      "allowedServicePortsInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of allowed service ports in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of allowed service ports"
        },
        "type": "Array",
        "schema": null
      },
      "NoPrivilegeEscalationInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of privileged escalation containers in Kubernetes clusters",
          "displayName": "Container with privileged escalation should be avoided"
        },
        "type": "String",
        "schema": null
      },
      "NoPrivilegeEscalationInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of privileged escalation containers in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of privileged escalation containers"
        },
        "type": "Array",
        "schema": null
      },
      "NoSharingSensitiveHostNamespacesInKubernetesEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of shared sensitive host namespaces in Kubernetes clusters",
          "displayName": "Containers sharing sensitive host namespaces should be avoided"
        },
        "type": "String",
        "schema": null
      },
      "NoSharingSensitiveHostNamespacesInKubernetesNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of  sharing sensitive host namespaces in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of sharing sensitive host namespaces in Kubernetes clusters"
        },
        "type": "Array",
        "schema": null
      },
      "ReadOnlyRootFileSystemInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of containers running with a read only root file system in Kubernetes clusters",
          "displayName": "Immutable (read-only) root filesystem should be enforced for containers"
        },
        "type": "String",
        "schema": null
      },
      "ReadOnlyRootFileSystemInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to monitoring of containers running with a read only root file system in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of containers running with a read only root file system"
        },
        "type": "Array",
        "schema": null
      },
      "AllowedCapabilitiesInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of Kubernetes containers using allowed capabilities only",
          "displayName": "Least privileged Linux capabilities should be enforced for containers"
        },
        "type": "String",
        "schema": null
      },
      "AllowedCapabilitiesInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to monitoring of containers using only allowed capabilities in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of containers use only allowed capabilities"
        },
        "type": "Array",
        "schema": null
      },
      "AllowedCapabilitiesInKubernetesClusterList": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "The list of capabilities that are allowed to be added to a container. Provide empty list as input to block everything.",
          "displayName": "Allowed capabilities"
        },
        "type": "Array",
        "schema": null
      },
      "DropCapabilitiesInKubernetesClusterList": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "The list of capabilities that must be dropped by a container.",
          "displayName": "Required drop capabilities"
        },
        "type": "Array",
        "schema": null
      },
      "AllowedAppArmorProfilesInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of modification of Kubernetes containers' AppArmor profile",
          "displayName": "Containers should only use allowed AppArmor profiles"
        },
        "type": "String",
        "schema": null
      },
      "AllowedAppArmorProfilesInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to monitoring of containers modifying of AppArmor profile in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of containers modification of AppArmor profile"
        },
        "type": "Array",
        "schema": null
      },
      "AllowedAppArmorProfilesInKubernetesClusterList": {
        "allowedValues": null,
        "defaultValue": [
          "runtime/default"
        ],
        "metadata": {
          "description": "The list of AppArmor profiles that containers are allowed to use. E.g. [ \"runtime/default\", \"docker/default\" ]. Provide empty list as input to block everything.",
          "displayName": "Allowed AppArmor profiles"
        },
        "type": "Array",
        "schema": null
      },
      "AllowedHostNetworkingAndPortsInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of Kubernetes containers' host networking and port ranges",
          "displayName": "Usage of host networking and ports should be restricted"
        },
        "type": "String",
        "schema": null
      },
      "AllowedHostNetworkingAndPortsInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to monitoring of containers host networking and ports in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of containers host networking and ports"
        },
        "type": "Array",
        "schema": null
      },
      "AllowHostNetworkingInKubernetesCluster": {
        "allowedValues": null,
        "defaultValue": false,
        "metadata": {
          "description": "Set this value to true if pod is allowed to use host network otherwise false.",
          "displayName": "Allow host network usage"
        },
        "type": "Boolean",
        "schema": null
      },
      "AllowedHostMinPortInKubernetesCluster": {
        "allowedValues": null,
        "defaultValue": 0,
        "metadata": {
          "description": "The minimum value in the allowable host port range that pods can use in the host network namespace.",
          "displayName": "Min host port for pod in Kubernetes cluster"
        },
        "type": "Integer",
        "schema": null
      },
      "AllowedHostMaxPortInKubernetesCluster": {
        "allowedValues": null,
        "defaultValue": 0,
        "metadata": {
          "description": "The maximum value in the allowable host port range that pods can use in the host network namespace.",
          "displayName": "Max host port for pod in Kubernetes cluster"
        },
        "type": "Integer",
        "schema": null
      },
      "AllowedHostPathVolumesInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of pod HostPath volume mounts in Kubernetes clusters",
          "displayName": "Usage of pod HostPath volume mounts should be restricted to a known list to restrict node access from compromised containers"
        },
        "type": "String",
        "schema": null
      },
      "AllowedHostPathVolumesInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to monitoring of pod HostPath volume mounts in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of pod HostPath volume mounts"
        },
        "type": "Array",
        "schema": null
      },
      "AllowedHostPathVolumesInKubernetesClusterList": {
        "allowedValues": null,
        "defaultValue": {
          "paths": []
        },
        "metadata": {
          "description": "The host paths allowed for pod hostPath volumes to use. Provide an empty paths list to block all host paths.",
          "displayName": "Allowed host paths for pod in Kubernetes cluster",
          "schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "pathPrefix": {
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pathPrefix",
                    "readOnly"
                  ]
                }
              }
            },
            "additionalProperties": false,
            "required": [
              "paths"
            ]
          }
        },
        "type": "Object",
        "schema": null
      },
      "memoryAndCPULimitsInKubernetesClusterEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of containers' CPU and memory limits in Kubernetes clusters",
          "displayName": "Containers' CPU and memory limits should be enforced"
        },
        "type": "String",
        "schema": null
      },
      "memoryInKubernetesClusterLimit": {
        "allowedValues": null,
        "defaultValue": "64Gi",
        "metadata": {
          "description": "The maximum memory bytes allowed for a container. E.g. 1Gi. For more information, please refer https://aka.ms/k8s-policy-pod-limits",
          "displayName": "Max allowed memory bytes in Kubernetes cluster"
        },
        "type": "String",
        "schema": null
      },
      "CPUInKubernetesClusterLimit": {
        "allowedValues": null,
        "defaultValue": "32",
        "metadata": {
          "description": "The maximum CPU units allowed for a container. E.g. 200m. For more information, please refer https://aka.ms/k8s-policy-pod-limits",
          "displayName": "Max allowed CPU units in Kubernetes cluster"
        },
        "type": "String",
        "schema": null
      },
      "memoryAndCPULimitsInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of memory and CPU limits in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of memory and CPU limits"
        },
        "type": "Array",
        "schema": null
      },
      "BlockVulnerableImagesInKubernetesClusterEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable or disable gating containers' with vulnerable images in Kubernetes clusters",
          "displayName": "[Deprecated]: Kubernetes clusters should gate deployment of vulnerable images",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "BlockVulnerableImagesInKubernetesClusterNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of block vulnerable images in Kubernetes clusters. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "[Deprecated]: Kubernetes namespaces to exclude from monitoring of containers with vulnerable images",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "BlockVulnerableImagesNamespaces": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
          "displayName": "[Deprecated]: Namespace inclusions",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "BlockVulnerableImagesExcludedImages": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "A list of RegEx rules used to exclude container images from policy evaluation. For example: exclude all images from the repo microsoft-defender-in-cluster-defense-repo in the blockreg ACR -  [\"(blockreg.azurecr.io/microsoft-defender-in-cluster-defense-repo).*\"]. Use an empty list to apply this policy to all container images.",
          "displayName": "[Deprecated]: Excluded images regex for gating vulnerable images in Kubernetes cluster",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "BlockVulnerableImagesSeverityThresholdForExcludingNotPatchableFindings": {
        "allowedValues": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "defaultValue": "None",
        "metadata": {
          "description": "Specify the maximum severity for exempting vulnerabilities without a patch. For example, specify Medium to ignore Low and Medium vulnerabilities without a patch.",
          "displayName": "[Deprecated]: Severity threshold for excluding gating of image vulnerabilities without a patch in Kubernetes cluster",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "BlockVulnerableImagesExcludeFindingIDs": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "A list of finding IDs that the policy should exempt.",
          "displayName": "[Deprecated]: Exclude finding IDs for gating vulnerable images scan results in Kubernetes cluster",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "severity": {
        "allowedValues": null,
        "defaultValue": {
          "Medium": 0,
          "High": 0,
          "Low": 0
        },
        "metadata": {
          "description": "The number of allowed findings per severity for an image. e.g. \"{\"High\":0,\"Medium\":3,\"Low\":10}\"",
          "displayName": "[Deprecated]: Severity threshold for excluding gating of image vulnerabilities in Kubernetes cluster",
          "deprecated": true
        },
        "type": "Object",
        "schema": {
          "type": "object",
          "properties": {
            "Medium": {
              "type": "integer"
            },
            "High": {
              "type": "integer"
            },
            "Low": {
              "type": "integer"
            }
          },
          "additionalProperties": false,
          "required": [
            "High",
            "Medium",
            "Low"
          ]
        }
      },
      "MustRunAsNonRootNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to monitoring of containers running as root users. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from monitoring of containers running as root user"
        },
        "type": "Array",
        "schema": null
      },
      "MustRunAsNonRootNamespaceEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable monitoring of containers running as root user in Kubernetes nodes",
          "displayName": "Kubernetes containers should not be run as root user"
        },
        "type": "String",
        "schema": null
      },
      "arcEnabledKubernetesClustersShouldHaveAzureDefendersExtensionInstalled": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable the monitoring of Arc enabled Kubernetes clusters without Azure Defender's extension installed",
          "displayName": "Azure Arc enabled Kubernetes clusters should have Azure Defender's extension installed"
        },
        "type": "String",
        "schema": null
      },
      "azureKubernetesServiceClustersShouldHaveSecurityProfileEnabled": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable or disable the monitoring of Azure Kubernetes Service clusters without Azure Defender's profile enabled",
          "displayName": "Azure Kubernetes Service clusters should have Azure Defender profile enabled"
        },
        "type": "String",
        "schema": null
      },
      "containerRegistryVulnerabilityAssessmentEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of Azure container registries by Microsoft Defender for Cloud vulnerability assessment (powered by Qualys)",
          "displayName": "Vulnerabilities in Azure Container Registry images should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "azureContainerRegistryVulnerabilityAssessmentEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of Azure container registries by Microsoft Defender for Cloud vulnerability assessment (powered by Microsoft Defender Vulnerability Management)",
          "displayName": "Vulnerabilities in Azure Container Registry images should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "kubernetesRunningImagesVulnerabilityAssessmentEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of Kubernetes Service clusters by Defender for Containers running images vulnerability assessment",
          "displayName": "Vulnerabilities in running images should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "kubernetesRunningImagesVulnerabilityMDVMAssessmentEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable or disable monitoring of Kubernetes Service clusters by Defender for Containers running images vulnerability assessment",
          "displayName": "Vulnerabilities in running images should be remediated"
        },
        "type": "String",
        "schema": null
      },
      "disallowPublicBlobAccessEffect": {
        "allowedValues": [
          "audit",
          "deny",
          "disabled"
        ],
        "defaultValue": "audit",
        "metadata": {
          "description": "Enable or disable reporting of Storage Accounts that allow public access",
          "displayName": "Storage account public access should be disallowed"
        },
        "type": "String",
        "schema": null
      },
      "azureBackupShouldBeEnabledForVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Ensure protection of your Azure Virtual Machines by enabling Azure Backup. Azure Backup is a secure and cost effective data protection solution for Azure.",
          "displayName": "Azure Backup should be enabled for Virtual Machines"
        },
        "type": "String",
        "schema": null
      },
      "managedIdentityShouldBeUsedInYourFunctionAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "Managed identity should be used in your Function App"
        },
        "type": "String",
        "schema": null
      },
      "georedundantBackupShouldBeEnabledForAzureDatabaseForMariadbMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Database for MariaDB allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "displayName": "Georedundant backup should be enabled for Azure Database for MariaDB"
        },
        "type": "String",
        "schema": null
      },
      "managedIdentityShouldBeUsedInYourWebAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "Managed identity should be used in your Web App"
        },
        "type": "String",
        "schema": null
      },
      "georedundantBackupShouldBeEnabledForAzureDatabaseForPostgresqlMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Database for PostgreSQL allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "displayName": "Georedundant backup should be enabled for Azure Database for PostgreSQL"
        },
        "type": "String",
        "schema": null
      },
      "ensureWEBAppHasClientCertificatesIncomingClientCertificatesSetToOnMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients that have a valid certificate will be able to reach the app.",
          "displayName": "Ensure WEB app has Client Certificates Incoming client certificates set to On"
        },
        "type": "String",
        "schema": null
      },
      "georedundantBackupShouldBeEnabledForAzureDatabaseForMysqlMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Database for MySQL allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "displayName": "Georedundant backup should be enabled for Azure Database for MySQL"
        },
        "type": "String",
        "schema": null
      },
      "latestTLSVersionShouldBeUsedInYourAPIAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Upgrade to the latest TLS version",
          "displayName": "[Deprecated]: Latest TLS version should be used in your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "diagnosticLogsInAppServicesShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Audit enabling of resource logs on the app. This enables you to recreate activity trails for investigation purposes if a security incident occurs or your network is compromised",
          "displayName": "Resource logs in App Services should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "managedIdentityShouldBeUsedInYourAPIAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "[Deprecated]: Managed identity should be used in your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "enforceSSLConnectionShouldBeEnabledForPostgresqlDatabaseServersMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
          "displayName": "Enforce SSL connection should be enabled for PostgreSQL database servers"
        },
        "type": "String",
        "schema": null
      },
      "enforceSSLConnectionShouldBeEnabledForMysqlDatabaseServersMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
          "displayName": "Enforce SSL connection should be enabled for MySQL database servers"
        },
        "type": "String",
        "schema": null
      },
      "latestTLSVersionShouldBeUsedInYourWebAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Upgrade to the latest TLS version",
          "displayName": "Latest TLS version should be used in your Web App"
        },
        "type": "String",
        "schema": null
      },
      "latestTLSVersionShouldBeUsedInYourFunctionAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Upgrade to the latest TLS version",
          "displayName": "Latest TLS version should be used in your Function App"
        },
        "type": "String",
        "schema": null
      },
      "ensureThatPHPVersionIsTheLatestIfUsedAsAPartOfTheApiAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for PHP software either due to security flaws or to include additional functionality. Using the latest PHP version for API apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that PHP version is the latest if used as a part of the API app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatPHPVersionIsTheLatestIfUsedAsAPartOfTheWEBAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for PHP software either due to security flaws or to include additional functionality. Using the latest PHP version for web apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that PHP version is the latest if used as a part of the WEB app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatJavaVersionIsTheLatestIfUsedAsAPartOfTheWebAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for Java software either due to security flaws or to include additional functionality. Using the latest Java version for web apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that Java version is the latest if used as a part of the Web app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatJavaVersionIsTheLatestIfUsedAsAPartOfTheFunctionAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for Java software either due to security flaws or to include additional functionality. Using the latest Java version for Function apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that Java version is the latest if used as a part of the Function app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatJavaVersionIsTheLatestIfUsedAsAPartOfTheApiAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for Java either due to security flaws or to include additional functionality. Using the latest Python version for API apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that Java version is the latest if used as a part of the API app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatPythonVersionIsTheLatestIfUsedAsAPartOfTheWebAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for Python software either due to security flaws or to include additional functionality. Using the latest Python version for web apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that Python version is the latest if used as a part of the Web app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatPythonVersionIsTheLatestIfUsedAsAPartOfTheFunctionAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for Python software either due to security flaws or to include additional functionality. Using the latest Python version for Function apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that Python version is the latest if used as a part of the Function app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "ensureThatPythonVersionIsTheLatestIfUsedAsAPartOfTheApiAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Periodically, newer versions are released for Python software either due to security flaws or to include additional functionality. Using the latest Python version for API apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux web apps.",
          "displayName": "[Deprecated]: Ensure that Python version is the latest if used as a part of the API app",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "privateEndpointShouldBeEnabledForPostgresqlServersMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for PostgreSQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "displayName": "Private endpoint should be enabled for PostgreSQL servers"
        },
        "type": "String",
        "schema": null
      },
      "privateEndpointShouldBeEnabledForMariadbServersMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MariaDB. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "displayName": "Private endpoint should be enabled for MariaDB servers"
        },
        "type": "String",
        "schema": null
      },
      "privateEndpointShouldBeEnabledForMysqlServersMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MySQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "displayName": "Private endpoint should be enabled for MySQL servers"
        },
        "type": "String",
        "schema": null
      },
      "sQLServersShouldBeConfiguredWithAuditingRetentionDaysGreaterThan90DaysMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Audit SQL servers configured with an auditing retention period of less than 90 days.",
          "displayName": "SQL servers should be configured with auditing retention days greater than 90 days"
        },
        "type": "String",
        "schema": null
      },
      "fTPSOnlyShouldBeRequiredInYourFunctionAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable FTPS enforcement for enhanced security",
          "displayName": "FTPS only should be required in your Function App"
        },
        "type": "String",
        "schema": null
      },
      "fTPSShouldBeRequiredInYourWebAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Enable FTPS enforcement for enhanced security",
          "displayName": "FTPS should be required in your Web App"
        },
        "type": "String",
        "schema": null
      },
      "fTPSOnlyShouldBeRequiredInYourAPIAppMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Enable FTPS enforcement for enhanced security",
          "displayName": "[Deprecated]: FTPS only should be required in your API App",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "functionAppsShouldHaveClientCertificatesEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients with valid certificates will be able to reach the app.",
          "displayName": "Function apps should have 'Client Certificates (Incoming client certificates)' enabled"
        },
        "type": "String",
        "schema": null
      },
      "cognitiveServicesAccountsShouldEnableDataEncryptionWithACustomerManagedKeyMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about customer-managed key encryption at https://aka.ms/cosmosdb-cmk.",
          "displayName": "Cognitive Services accounts should enable data encryption with a customer-managed key"
        },
        "type": "String",
        "schema": null
      },
      "azureCosmosDbAccountsShouldUseCustomerManagedKeysToEncryptDataAtRestMonitoringEffect": {
        "allowedValues": [
          "audit",
          "deny",
          "disabled"
        ],
        "defaultValue": "disabled",
        "metadata": {
          "description": "Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about customer-managed key encryption at https://aka.ms/cosmosdb-cmk.",
          "displayName": "Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest"
        },
        "type": "String",
        "schema": null
      },
      "azureCosmosDbAccountsShouldHaveLocalAuthenticationMethodsDisabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Disabling local authentication methods improves security by ensuring that Cosmos DB database accounts exclusively require Azure Active Directory identities for authentication. Learn more at: https://docs.microsoft.com/azure/cosmos-db/how-to-setup-rbac#disable-local-auth.",
          "displayName": "Cosmos DB database accounts should have local authentication methods disabled"
        },
        "type": "String",
        "schema": null
      },
      "keyVaultsShouldHavePurgeProtectionEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Malicious deletion of a key vault can lead to permanent data loss. A malicious insider in your organization can potentially delete and purge key vaults. Purge protection protects you from insider attacks by enforcing a mandatory retention period for soft deleted key vaults. No one inside your organization or Microsoft will be able to purge your key vaults during the soft delete retention period.",
          "displayName": "Key vaults should have purge protection enabled"
        },
        "type": "String",
        "schema": null
      },
      "keyVaultsShouldHaveSoftDeleteEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Deleting a key vault without soft delete enabled permanently deletes all secrets, keys, and certificates stored in the key vault. Accidental deletion of a key vault can lead to permanent data loss. Soft delete allows you to recover an accidentally deleted key vault for a configurable retention period.",
          "displayName": "Key vaults should have soft delete enabled"
        },
        "type": "String",
        "schema": null
      },
      "azureCacheForRedisShouldResideWithinAVirtualNetworkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Azure Virtual Network deployment provides enhanced security and isolation for your Azure Cache for Redis, as well as subnets, access control policies, and other features to further restrict access.When an Azure Cache for Redis instance is configured with a virtual network, it is not publicly addressable and can only be accessed from virtual machines and applications within the virtual network.",
          "displayName": "[Deprecated]: Azure Cache for Redis should reside within a virtual network",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "azureCacheForRedisShouldUsePrivateEndpointMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Private endpoints lets you connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to your Azure Cache for Redis instances, data leakage risks are reduced. Learn more at: https://docs.microsoft.com/azure/azure-cache-for-redis/cache-private-link.",
          "displayName": "Azure Cache for Redis should use private link"
        },
        "type": "String",
        "schema": null
      },
      "storageAccountsShouldUseCustomerManagedKeyForEncryptionMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Secure your storage account with greater flexibility using customer-managed keys. When you specify a customer-managed key, that key is used to protect and control access to the key that encrypts your data. Using customer-managed keys provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.",
          "displayName": "Storage accounts should use customer-managed key for encryption"
        },
        "type": "String",
        "schema": null
      },
      "storageAccountsShouldRestrictNetworkAccessUsingVirtualNetworkRulesMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Protect your storage accounts from potential threats using virtual network rules as a preferred method instead of IP-based filtering. Disabling IP-based filtering prevents public IPs from accessing your storage accounts.",
          "displayName": "Storage accounts should restrict network access using virtual network rules"
        },
        "type": "String",
        "schema": null
      },
      "containerRegistriesShouldBeEncryptedWithACustomerManagedKeyMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about customer-managed key encryption at https://aka.ms/acr/CMK.",
          "displayName": "Container registries should be encrypted with a customer-managed key"
        },
        "type": "String",
        "schema": null
      },
      "containerRegistriesShouldNotAllowUnrestrictedNetworkAccessMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure container registries by default accept connections over the internet from hosts on any network. To protect your registries from potential threats, allow access from only specific public IP addresses or address ranges. If your registry doesn't have an IP/firewall rule or a configured virtual network, it will appear in the unhealthy resources. Learn more about Container Registry network rules here: https://aka.ms/acr/portal/public-network and here https://aka.ms/acr/vnet.",
          "displayName": "Container registries should not allow unrestricted network access"
        },
        "type": "String",
        "schema": null
      },
      "containerRegistriesShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network.By mapping private endpoints to your container registries instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/acr/private-link.",
          "displayName": "Container registries should use private link"
        },
        "type": "String",
        "schema": null
      },
      "appConfigurationShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your app configuration instances instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/appconfig/private-endpoint.",
          "displayName": "App Configuration should use private link"
        },
        "type": "String",
        "schema": null
      },
      "azureEventGridDomainsShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network.By mapping private endpoints to your Event Grid domains instead of the entire service, you'll also be protected against data leakage risks.Learn more at: https://aka.ms/privateendpoints.",
          "displayName": "Azure Event Grid domains should use private link"
        },
        "type": "String",
        "schema": null
      },
      "azureEventGridTopicsShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your topics instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints.",
          "displayName": "Azure Event Grid topics should use private link"
        },
        "type": "String",
        "schema": null
      },
      "azureSignalRServiceShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your  SignalR resources instead of the entire service, you'll also be protected against data leakage risks .Learn more at: https://aka.ms/asrs/privatelink.",
          "displayName": "Azure SignalR Service should use private link"
        },
        "type": "String",
        "schema": null
      },
      "azureMachineLearningWorkspacesShouldBeEncryptedWithACustomerManagedKeyMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Manage encryption at rest of your Azure Machine Learning workspace data with customer-managed keys. By default, customer data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about customer-managed key encryption at https://aka.ms/azureml-workspaces-cmk.",
          "displayName": "Azure Machine Learning workspaces should be encrypted with a customer-managed key"
        },
        "type": "String",
        "schema": null
      },
      "azureMachineLearningWorkspacesShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Azure Machine Learning workspaces instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/azureml-workspaces-privatelink.",
          "displayName": "Azure Machine Learning workspaces should use private link"
        },
        "type": "String",
        "schema": null
      },
      "webApplicationFirewallShouldBeEnabledForAzureFrontDoorServiceServiceMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
          "displayName": "Azure Web Application Firewall should be enabled for Azure Front Door entry-points"
        },
        "type": "String",
        "schema": null
      },
      "webApplicationFirewallShouldBeEnabledForApplicationGatewayMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
          "displayName": "Web Application Firewall (WAF) should be enabled for Application Gateway"
        },
        "type": "String",
        "schema": null
      },
      "publicNetworkAccessShouldBeDisabledForMariaDbServersMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Disable the public network access property to improve security and ensure your Azure Database for MariaDB can only be accessed from a private endpoint. This configuration strictly disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "displayName": "Public network access should be disabled for MariaDB servers"
        },
        "type": "String",
        "schema": null
      },
      "publicNetworkAccessShouldBeDisabledForMySqlServersMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Disable the public network access property to improve security and ensure your Azure Database for MySQL can only be accessed from a private endpoint. This configuration strictly disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "displayName": "Public network access should be disabled for MySQL servers"
        },
        "type": "String",
        "schema": null
      },
      "bringYourOwnKeyDataProtectionShouldBeEnabledForMySqlServersMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
          "displayName": "MySQL servers should use customer-managed keys to encrypt data at rest"
        },
        "type": "String",
        "schema": null
      },
      "publicNetworkAccessShouldBeDisabledForPostgreSqlServersMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Disable the public network access property to improve security and ensure your Azure Database for PostgreSQL can only be accessed from a private endpoint. This configuration disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "displayName": "Public network access should be disabled for PostgreSQL servers"
        },
        "type": "String",
        "schema": null
      },
      "bringYourOwnKeyDataProtectionShouldBeEnabledForPostgreSqlServersMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
          "displayName": "PostgreSQL servers should use customer-managed keys to encrypt data at rest"
        },
        "type": "String",
        "schema": null
      },
      "vmImageBuilderTemplatesShouldUsePrivateLinkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Audit VM Image Builder templates that do not have a virtual network configured. When a virtual network is not configured, a public IP is created and used instead which may directly expose resources to the internet and increase the potential attack surface.",
          "displayName": "VM Image Builder templates should use private link"
        },
        "type": "String",
        "schema": null
      },
      "firewallShouldBeEnabledOnKeyVaultMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Key vault's firewall prevents unauthorized traffic from reaching your key vault and provides an additional layer of protection for your secrets. Enable the firewall to make sure that only traffic from allowed networks can access your key vault.",
          "displayName": "Firewall should be enabled on Key Vault"
        },
        "type": "String",
        "schema": null
      },
      "privateEndpointShouldBeConfiguredForKeyVaultMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Private link provides a way to connect Key Vault to your Azure resources without sending traffic over the public internet. Private link provides defense in depth protection against data exfiltration.",
          "displayName": "Private endpoint should be configured for Key Vault"
        },
        "type": "String",
        "schema": null
      },
      "azureSpringCloudShouldUseNetworkInjectionMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Spring Cloud instances should use virtual network injection for the following purposes: 1. Isolate Azure Spring Cloud from Internet. 2. Enable Azure Spring Cloud to interact with systems in either on premises data centers or Azure service in other virtual networks. 3. Empower customers to control inbound and outbound network communications for Azure Spring Cloud.",
          "displayName": "Azure Spring Cloud should use network injection"
        },
        "type": "String",
        "schema": null
      },
      "subscriptionsShouldHaveAContactEmailAddressForSecurityIssuesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "To ensure the relevant people in your organization are notified when there is a potential security breach in one of your subscriptions, set a security contact to receive email notifications from Security Center.",
          "displayName": "Subscriptions should have a contact email address for security issues"
        },
        "type": "String",
        "schema": null
      },
      "autoProvisioningOfTheLogAnalyticsAgentShouldBeEnabledOnYourSubscriptionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "To monitor for security vulnerabilities and threats, Microsoft Defender for Cloud collects data from your Azure virtual machines. Data is collected by the Log Analytics agent, formerly known as the Microsoft Monitoring Agent (MMA), which reads various security-related configurations and event logs from the machine and copies the data to your Log Analytics workspace for analysis. We recommend enabling auto provisioning to automatically deploy the agent to all supported Azure VMs and any new ones that are created.",
          "displayName": "Auto provisioning of the Log Analytics agent should be enabled on your subscription"
        },
        "type": "String",
        "schema": null
      },
      "emailNotificationForHighSeverityAlertsShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "To ensure the relevant people in your organization are notified when there is a potential security breach in one of your subscriptions, enable email notifications for high severity alerts in Security Center.",
          "displayName": "Email notification for high severity alerts should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "emailNotificationToSubscriptionOwnerForHighSeverityAlertsShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "To ensure your subscription owners are notified when there is a potential security breach in their subscription, set email notifications to subscription owners for high severity alerts in Security Center.",
          "displayName": "Email notification to subscription owner for high severity alerts should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "storageAccountShouldUseAPrivateLinkConnectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Private links enforce secure communication, by providing private connectivity to the storage account",
          "displayName": "Storage account should use a private link connection"
        },
        "type": "String",
        "schema": null
      },
      "authenticationToLinuxMachinesShouldRequireSSHKeysMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Although SSH itself provides an encrypted connection, using passwords with SSH still leaves the VM vulnerable to brute-force attacks. The most secure option for authenticating to an Azure Linux virtual machine over SSH is with a public-private key pair, also known as SSH keys. Learn more: https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed.",
          "displayName": "Authentication to Linux machines should require SSH keys"
        },
        "type": "String",
        "schema": null
      },
      "privateEndpointConnectionsOnAzureSQLDatabaseShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure SQL Database.",
          "displayName": "Private endpoint connections on Azure SQL Database should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "publicNetworkAccessOnAzureSQLDatabaseShouldBeDisabledMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Disabling the public network access property improves security by ensuring your Azure SQL Database can only be accessed from a private endpoint. This configuration denies all logins that match IP or virtual network based firewall rules.",
          "displayName": "Public network access on Azure SQL Database should be disabled"
        },
        "type": "String",
        "schema": null
      },
      "ensureAPIAppHasClientCertificatesIncomingClientCertificatesSetToOnMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients that have a valid certificate will be able to reach the app.",
          "displayName": "[Deprecated]: Ensure API app has Client Certificates Incoming client certificates set to On",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "kubernetesClustersShouldBeAccessibleOnlyOverHTTPSMonitoringEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Use of HTTPS ensures authentication and protects data in transit from network layer eavesdropping attacks. This capability is currently generally available for Kubernetes Service (AKS), and in preview for Azure Arc enabled Kubernetes. For more info, visit https://aka.ms/kubepolicydoc",
          "displayName": "Kubernetes clusters should be accessible only over HTTPS"
        },
        "type": "String",
        "schema": null
      },
      "kubernetesClustersShouldBeAccessibleOnlyOverHTTPSExcludedNamespaces": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation of HTTPS only access. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from evaluation of HTTPS only access"
        },
        "type": "Array",
        "schema": null
      },
      "kubernetesClustersShouldBeAccessibleOnlyOverHTTPSNamespaces": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "This parameter is deprecated. The policy is applied to all Kubernetes resources in all Kubernetes namespaces.",
          "displayName": "[Deprecated]: Namespace inclusions",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "To protect the privacy of information communicated over the Internet, your web servers should use the latest version of the industry-standard cryptographic protocol, Transport Layer Security (TLS). TLS secures communications over a network by using security certificates to encrypt a connection between machines.",
          "displayName": "Windows web servers should be configured to use secure communication protocols"
        },
        "type": "String",
        "schema": null
      },
      "windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines": {
        "allowedValues": [
          "true",
          "false"
        ],
        "defaultValue": "true",
        "metadata": {
          "description": "By selecting this option, you choose to include Arc connected servers in the scope of this policy.",
          "displayName": "Include Arc connected servers"
        },
        "type": "String",
        "schema": null
      },
      "windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsMinimumTLSVersion": {
        "allowedValues": [
          "1.1",
          "1.2"
        ],
        "defaultValue": "1.2",
        "metadata": {
          "description": "The minimum TLS protocol version that should be enabled. Windows web servers with lower TLS versions will be marked as non-compliant.",
          "displayName": "Minimum TLS version"
        },
        "type": "String",
        "schema": null
      },
      "cognitiveServicesAccountsShouldRestrictNetworkAccessMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Network access to Cognitive Services accounts should be restricted. Configure network rules so only applications from allowed networks can access the Cognitive Services account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges.",
          "displayName": "Cognitive Services accounts should restrict network access"
        },
        "type": "String",
        "schema": null
      },
      "cognitiveServicesAccountsShouldUseCustomerOwnedStorageOrEnableDataEncryptionMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "This policy audits any Cognitive Services account not using customer owned storage nor data encryption. For each Cognitive Services account with storage, use either customer owned storage or enable data encryption.",
          "displayName": "[Deprecated]: Cognitive Services accounts should use customer owned storage or enable data encryption",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "publicNetworkAccessShouldBeDisabledForCognitiveServicesAccountsMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "This policy audits any Cognitive Services account in your environment with public network access enabled. Public network access should be disabled so that only connections from private endpoints are allowed.",
          "displayName": "Public network access should be disabled for Cognitive Services accounts"
        },
        "type": "String",
        "schema": null
      },
      "cognitiveServicesAccountsShouldEnableDataEncryptionMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "This policy audits any Cognitive Services account not using data encryption. For each Cognitive Services account with storage, should enable data encryption with either customer managed or Microsoft managed key.",
          "displayName": "[Deprecated]: Cognitive Services accounts should enable data encryption",
          "deprecated": true
        },
        "type": "String",
        "schema": null
      },
      "aPIManagementServicesShouldUseAVirtualNetworkMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Azure Virtual Network deployment provides enhanced security, isolation and allows you to place your API Management service in a non-internet routable network that you control access to. These networks can then be connected to your on-premises networks using various VPN technologies, which enables access to your backend services within the network and/or on-premises. The developer portal and API gateway, can be configured to be accessible either from the Internet or only within the virtual network.",
          "displayName": "API Management services should use a virtual network"
        },
        "type": "String",
        "schema": null
      },
      "aPIManagementServicesShouldUseAVirtualNetworkEvaluatedSkuNames": {
        "allowedValues": [
          "Developer",
          "Basic",
          "Standard",
          "Premium",
          "Consumption"
        ],
        "defaultValue": [
          "Developer",
          "Premium"
        ],
        "metadata": {
          "description": "List of API Management SKUs against which this policy will be evaluated.",
          "displayName": "API Management SKU Names"
        },
        "type": "Array",
        "schema": null
      },
      "azureCosmosDBAccountsShouldHaveFirewallRulesMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Firewall rules should be defined on your Azure Cosmos DB accounts to prevent traffic from unauthorized sources. Accounts that have at least one IP rule defined with the virtual network filter enabled are deemed compliant. Accounts disabling public access are also deemed compliant.",
          "displayName": "Azure Cosmos DB accounts should have firewall rules"
        },
        "type": "String",
        "schema": null
      },
      "networkWatcherShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Network Watcher is a regional service that enables you to monitor and diagnose conditions at a network scenario level in, to, and from Azure. Scenario level monitoring enables you to diagnose problems at an end to end network level view. Network diagnostic and visualization tools available with Network Watcher help you understand, diagnose, and gain insights to your network in Azure.",
          "displayName": "Network Watcher should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "networkWatcherShouldBeEnabledListOfLocations": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "description": "To see a complete list of regions, run the PowerShell command Get-AzLocation",
          "displayName": "[Deprecated]: List of regions where Network Watcher should be enabled",
          "strongType": "location",
          "deprecated": true
        },
        "type": "Array",
        "schema": null
      },
      "networkWatcherShouldBeEnabledResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "NetworkWatcherRG",
        "metadata": {
          "description": "Name of the resource group where Network Watchers are located",
          "displayName": "Name of the resource group for Network Watcher"
        },
        "type": "String",
        "schema": null
      },
      "AzureDefenderForResourceManagerShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Azure Defender for Resource Manager automatically monitors the resource management operations in your organization. Azure Defender detects threats and alerts you about suspicious activity. Learn more about the capabilities of Azure Defender for Resource Manager at https://aka.ms/defender-for-resource-manager . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center's pricing page: https://aka.ms/pricing-security-center .",
          "displayName": "Azure Defender for Resource Manager should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "AzureDefenderForDNSShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Azure Defender for DNS provides an additional layer of protection for your cloud resources by continuously monitoring all DNS queries from your Azure resources. Azure Defender alerts you about suspicious activity at the DNS layer. Learn more about the capabilities of Azure Defender for DNS at https://aka.ms/defender-for-dns . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center's pricing page: https://aka.ms/pricing-security-center .",
          "displayName": "Azure Defender for DNS should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "AzureDefenderForOpenSourceRelationalDatabasesShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Azure Defender for open-source relational databases detects anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. Learn more about the capabilities of Azure Defender for open-source relational databases at https://aka.ms/AzDforOpenSourceDBsDocu. Important: Enabling this plan will result in charges for protecting your open-source relational databases. Learn about the pricing on Security Center's pricing page: https://aka.ms/pricing-security-center.",
          "displayName": "Azure Defender for open-source relational databases should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "MicrosoftDefenderCSPMShouldBeEnabledMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Defender Cloud Security Posture Management (CSPM) provides enhanced posture capabilities and a new intelligent cloud security graph to help identify, prioritize, and reduce risk. Defender CSPM is available in addition to the free foundational security posture capabilities turned on by default in Defender for Cloud.",
          "displayName": "Microsoft Defender CSPM should be enabled"
        },
        "type": "String",
        "schema": null
      },
      "KubernetesClustersShouldNotUseTheDefaultNamespaceMonitoringEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Prevent usage of the default namespace in Kubernetes clusters to protect against unauthorized access for ConfigMap, Pod, Secret, Service, and ServiceAccount resource types. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should not use the default namespace"
        },
        "type": "String",
        "schema": null
      },
      "KubernetesClustersShouldDisableAutomountingAPICredentialsMonitoringEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Disable automounting API credentials to prevent a potentially compromised Pod resource to run API commands against Kubernetes clusters. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should disable automounting API credentials"
        },
        "type": "String",
        "schema": null
      },
      "KubernetesClustersShouldDisableAutomountingAPICredentialsMonitoringNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to restrict automounting API credentials. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from restricting automounting API credentials"
        },
        "type": "Array",
        "schema": null
      },
      "KubernetesClustersShouldNotGrantCAPSYSADMINSecurityCapabilitiesMonitoringEffect": {
        "allowedValues": [
          "audit",
          "Audit",
          "deny",
          "Deny",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "To reduce the attack surface of your containers, restrict CAP_SYS_ADMIN Linux capabilities. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should not grant CAPSYSADMIN security capabilities"
        },
        "type": "String",
        "schema": null
      },
      "KubernetesClustersShouldNotGrantCAPSYSADMINSecurityCapabilitiesMonitoringNamespaceExclusion": {
        "allowedValues": null,
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc",
          "azuredefender",
          "mdc",
          "azure-extensions-usage-system"
        ],
        "metadata": {
          "description": "List of Kubernetes namespaces to exclude from evaluation to restrict CAP_SYS_ADMIN Linux capabilities. To list multiple namespaces, use semicolons (;) to separate them. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design.",
          "displayName": "Kubernetes namespaces to exclude from restricting CAP_SYS_ADMIN Linux capabilities"
        },
        "type": "Array",
        "schema": null
      },
      "VtpmShouldBeEnabledOnSupportedVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable virtual TPM device on supported virtual machines to facilitate Measured Boot and other OS security features that require a TPM. Once enabled, vTPM can be used to attest boot integrity. This assessment only applies to trusted launch enabled virtual machines.",
          "displayName": "vTPM should be enabled on supported virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "SecureBootShouldBeEnabledOnSupportedWindowsVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "description": "Enable Secure Boot on supported Windows virtual machines to mitigate against malicious and unauthorized changes to the boot chain. Once enabled, only trusted bootloaders, kernel and kernel drivers will be allowed to run. This assessment only applies to trusted launch enabled Windows virtual machines.",
          "displayName": "Secure Boot should be enabled on supported Windows virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "GuestAttestationExtensionShouldBeInstalledOnSupportedLinuxVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Install Guest Attestation extension on supported Linux virtual machines to allow Microsoft Defender for Cloud to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled Linux virtual machines.",
          "displayName": "Guest Attestation extension should be installed on supported Linux virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "GuestAttestationExtensionShouldBeInstalledOnSupportedLinuxVirtualMachinesScaleSetsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Install Guest Attestation extension on supported Linux virtual machines scale sets to allow Microsoft Defender for Cloud to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled Linux virtual machine scale sets.",
          "displayName": "Guest Attestation extension should be installed on supported Linux virtual machines scale sets"
        },
        "type": "String",
        "schema": null
      },
      "GuestAttestationExtensionShouldBeInstalledOnSupportedWindowsVirtualMachinesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Install Guest Attestation extension on supported virtual machines to allow Microsoft Defender for Cloud to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled virtual machines.",
          "displayName": "Guest Attestation extension should be installed on supported Windows virtual machines"
        },
        "type": "String",
        "schema": null
      },
      "GuestAttestationExtensionShouldBeInstalledOnSupportedWindowsVirtualMachinesScaleSetsMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Install Guest Attestation extension on supported virtual machines scale sets to allow Microsoft Defender for Cloud to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled virtual machine scale sets.",
          "displayName": "Guest Attestation extension should be installed on supported Windows virtual machines scale sets"
        },
        "type": "String",
        "schema": null
      },
      "LinuxVirtualMachineShouldUseSignedAndTrustedBootComponentEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "All OS boot components (boot loader, kernel, kernel drivers) must be signed by trusted publishers. Defender for Cloud has identified untrusted OS boot components on one or more of your Linux machines. To protect your machines from potentially malicious components, add them to your allow list or remove the identified components.",
          "displayName": "Linux virtual machines should use only signed and trusted boot components"
        },
        "type": "String",
        "schema": null
      },
      "installEndpointProtectionMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "To protect your machines from threats and vulnerabilities, install a supported endpoint protection solution.",
          "displayName": "Endpoint protection should be installed on your machines"
        },
        "type": "String",
        "schema": null
      },
      "endpointProtectionHealthIssuesMonitoringEffect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "description": "Resolve endpoint protection health issues on your virtual machines to protect them from latest threats and vulnerabilities. Microsoft Defender for Cloud supported endpoint protection solutions are documented here - https://docs.microsoft.com/azure/security-center/security-center-services?tabs=features-windows#supported-endpoint-protection-solutions. Endpoint protection assessment is documented here - https://docs.microsoft.com/azure/security-center/security-center-endpoint-protection.",
          "displayName": "Endpoint protection health issues should be resolved on your machines"
        },
        "type": "String",
        "schema": null
      }
    },
    "policyDefinitions": [
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4fe33eb-e377-4efb-ab31-0784311bc499",
        "policyDefinitionReferenceId": "installLogAnalyticsAgentOnVmMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('installLogAnalyticsAgentOnVmMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "policyDefinitionReferenceId": "installLogAnalyticsAgentOnVmssMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('installLogAnalyticsAgentOnVmssMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a075868-4c26-42ef-914c-5bc007359560",
        "policyDefinitionReferenceId": "certificatesValidityPeriodMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('certificatesValidityPeriodMonitoringEffect')]"
          },
          "maximumValidityInMonths": {
            "value": "[parameters('certificatesValidityPeriodInMonths')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-7"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98728c90-32c7-4049-8429-847dc0f4fe37",
        "policyDefinitionReferenceId": "secretsExpirationSet",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('secretsExpirationSetEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "policyDefinitionReferenceId": "keysExpirationSet",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('keysExpirationSetEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "policyDefinitionReferenceId": "vmssOsVulnerabilitiesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vmssOsVulnerabilitiesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de",
        "policyDefinitionReferenceId": "vmssEndpointProtectionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vmssEndpointProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_ES-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "policyDefinitionReferenceId": "vmssSystemUpdatesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vmssSystemUpdatesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "policyDefinitionReferenceId": "gcExtOnVMMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azurePolicyforWindowsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "policyDefinitionReferenceId": "gcExtOnVMWithNoSAMIMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('gcExtOnVMWithNoSAMIMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-3",
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "policyDefinitionReferenceId": "windowsDefenderExploitGuardMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('windowsDefenderExploitGuardMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          },
          "notAvailableMachineState": {
            "value": "Compliant"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_ES-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "policyDefinitionReferenceId": "windowsGuestConfigBaselinesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('windowsGuestConfigBaselinesMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "policyDefinitionReferenceId": "linuxGuestConfigBaselinesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('linuxGuestConfigBaselinesMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "policyDefinitionReferenceId": "diagnosticsLogsInIoTHubMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInIoTHubMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInIoTHubRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "policyDefinitionReferenceId": "disableUnrestrictedNetworkToStorageAccountMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('disableUnrestrictedNetworkToStorageAccountMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "policyDefinitionReferenceId": "useRbacRulesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('useRbacRulesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-7"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "policyDefinitionReferenceId": "diagnosticsLogsInStreamAnalyticsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInStreamAnalyticsMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInStreamAnalyticsRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
        "policyDefinitionReferenceId": "secureTransferToStorageAccountMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('secureTransferToStorageAccountMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "policyDefinitionReferenceId": "aadAuthenticationInSqlServerMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('aadAuthenticationInSqlServerMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "policyDefinitionReferenceId": "diagnosticsLogsInServiceBusMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInServiceBusMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInServiceBusRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/617c02be-7f02-4efd-8836-3180d47b6c68",
        "policyDefinitionReferenceId": "clusterProtectionLevelInServiceFabricMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('clusterProtectionLevelInServiceFabricMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "policyDefinitionReferenceId": "aadAuthenticationInServiceFabricMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('aadAuthenticationInServiceFabricMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "policyDefinitionReferenceId": "diagnosticsLogsInSearchServiceMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInSearchServiceMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInSearchServiceRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "policyDefinitionReferenceId": "diagnosticsLogsInRedisCacheMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInRedisCacheMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d",
        "policyDefinitionReferenceId": "diagnosticsLogsInLogicAppsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInLogicAppsMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInLogicAppsRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "policyDefinitionReferenceId": "diagnosticsLogsInKeyVaultMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInKeyVaultMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInKeyVaultRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-8",
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "policyDefinitionReferenceId": "diagnosticsLogsInEventHubMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInEventHubMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInEventHubRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "policyDefinitionReferenceId": "diagnosticsLogsInDataLakeStoreMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInDataLakeStoreMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInDataLakeStoreRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "policyDefinitionReferenceId": "diagnosticsLogsInDataLakeAnalyticsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInDataLakeAnalyticsMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInDataLakeAnalyticsRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "policyDefinitionReferenceId": "classicStorageAccountsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('classicStorageAccountsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_AM-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "policyDefinitionReferenceId": "classicComputeVMsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('classicComputeVMsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_AM-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d",
        "policyDefinitionReferenceId": "diagnosticsLogsInBatchAccountMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInBatchAccountMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInBatchAccountRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "policyDefinitionReferenceId": "encryptionOfAutomationAccountMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('encryptionOfAutomationAccountMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12",
        "policyDefinitionReferenceId": "sqlDbEncryptionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlDbEncryptionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "policyDefinitionReferenceId": "sqlServerAuditingMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlServerAuditingMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60",
        "policyDefinitionReferenceId": "systemUpdatesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('systemUpdatesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f85bf3e0-d513-442e-89c3-1784ad63382b",
        "policyDefinitionReferenceId": "systemUpdatesV2Monitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('systemUpdatesV2MonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "policyDefinitionReferenceId": "systemUpdatesAutoAssessmentMode",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('systemUpdatesAutoAssessmentModeEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "policyDefinitionReferenceId": "jitNetworkAccessMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('jitNetworkAccessMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-3",
          "Azure_Security_Benchmark_v3.0_PA-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "policyDefinitionReferenceId": "adaptiveApplicationControlsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('adaptiveApplicationControlsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_AM-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534",
        "policyDefinitionReferenceId": "adaptiveApplicationControlsUpdateMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('adaptiveApplicationControlsUpdateMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_AM-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e71308d3-144b-4262-b144-efdc3cc90517",
        "policyDefinitionReferenceId": "networkSecurityGroupsOnSubnetsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('networkSecurityGroupsOnSubnetsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "policyDefinitionReferenceId": "networkSecurityGroupsOnVirtualMachinesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('networkSecurityGroupsOnVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bb91dfba-c30d-4263-9add-9c2384e659a6",
        "policyDefinitionReferenceId": "networkSecurityGroupsOnInternalVirtualMachinesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('networkSecurityGroupsOnInternalVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "policyDefinitionReferenceId": "systemConfigurationsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('systemConfigurationsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "policyDefinitionReferenceId": "endpointProtectionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('endpointProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_ES-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
        "policyDefinitionReferenceId": "diskEncryptionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diskEncryptionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "policyDefinitionReferenceId": "serverVulnerabilityAssessment",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('serverVulnerabilityAssessmentEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
        "policyDefinitionReferenceId": "nextGenerationFirewallMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('nextGenerationFirewallMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "policyDefinitionReferenceId": "sqlDbVulnerabilityAssesmentMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlDbVulnerabilityAssesmentMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "policyDefinitionReferenceId": "serverSqlDbVulnerabilityAssesmentMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('serverSqlDbVulnerabilityAssesmentMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "policyDefinitionReferenceId": "identityDesignateLessThanOwnersMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityDesignateLessThanOwnersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "policyDefinitionReferenceId": "identityDesignateMoreThanOneOwnerMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityDesignateMoreThanOneOwnerMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e3e008c3-56b9-4133-8fd7-d3347377402a",
        "policyDefinitionReferenceId": "identityEnableMFAForOwnerPermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityEnableMFAForOwnerPermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/931e118d-50a1-4457-a5e4-78550e086c52",
        "policyDefinitionReferenceId": "identityEnableMFAForWritePermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityEnableMFAForWritePermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "policyDefinitionReferenceId": "identityEnableMFAForReadPermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityEnableMFAForReadPermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "policyDefinitionReferenceId": "identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-1",
          "Azure_Security_Benchmark_v3.0_PA-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "policyDefinitionReferenceId": "identityRemoveDeprecatedAccountMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveDeprecatedAccountMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/339353f6-2387-4a45-abe4-7f529d121046",
        "policyDefinitionReferenceId": "identityRemoveExternalAccountWithOwnerPermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-1",
          "Azure_Security_Benchmark_v3.0_PA-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "policyDefinitionReferenceId": "identityRemoveExternalAccountWithWritePermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveExternalAccountWithWritePermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "policyDefinitionReferenceId": "identityRemoveExternalAccountWithReadPermissionsMonitoringNew",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveExternalAccountWithReadPermissionsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "policyDefinitionReferenceId": "functionAppDisableRemoteDebuggingMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppDisableRemoteDebuggingMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "policyDefinitionReferenceId": "webAppDisableRemoteDebuggingMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppDisableRemoteDebuggingMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "policyDefinitionReferenceId": "functionAppEnforceHttpsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppEnforceHttpsMonitoringEffectV2')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d",
        "policyDefinitionReferenceId": "webAppEnforceHttpsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppEnforceHttpsMonitoringEffectV2')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "policyDefinitionReferenceId": "functionAppRestrictCORSAccessMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppRestrictCORSAccessMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "policyDefinitionReferenceId": "webAppRestrictCORSAccessMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppRestrictCORSAccessMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "policyDefinitionReferenceId": "vnetEnableDDoSProtectionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vnetEnableDDoSProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "policyDefinitionReferenceId": "sqlServerAdvancedDataSecurityMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlServerAdvancedDataSecurityMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/938c4981-c2c9-4168-9cd6-972b8675f906",
        "policyDefinitionReferenceId": "arcEnabledSqlServerDefenderStatus",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('arcEnabledSqlServerDefenderStatusEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7926a6d1-b268-4586-8197-e8ae90c877d7",
        "policyDefinitionReferenceId": "enableDefenderForApis",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-1",
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "policyDefinitionReferenceId": "sqlManagedInstanceAdvancedDataSecurityMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlManagedInstanceAdvancedDataSecurityMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "policyDefinitionReferenceId": "kubernetesServiceRbacEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesServiceRbacEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-7"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "policyDefinitionReferenceId": "kubernetesServiceAuthorizedIPRangesEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesServiceAuthorizedIPRangesEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "policyDefinitionReferenceId": "vulnerabilityAssessmentOnServerMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vulnerabilityAssessmentOnServerMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "policyDefinitionReferenceId": "vulnerabilityAssessmentOnManagedInstanceMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vulnerabilityAssessmentOnManagedInstanceMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "policyDefinitionReferenceId": "adaptiveNetworkHardeningsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('adaptiveNetworkHardeningsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-1",
          "Azure_Security_Benchmark_v3.0_NS-7"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917",
        "policyDefinitionReferenceId": "restrictAccessToManagementPortsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('restrictAccessToManagementPortsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd352bd5-2853-4985-bf0d-73806b4a5744",
        "policyDefinitionReferenceId": "disableIPForwardingMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('disableIPForwardingMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "policyDefinitionReferenceId": "ensureServerTDEIsEncryptedWithYourOwnKeyMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('ensureServerTDEIsEncryptedWithYourOwnKeyWithDenyMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "policyDefinitionReferenceId": "ensureManagedInstanceTDEIsEncryptedWithYourOwnKeyMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('ensureManagedInstanceTDEIsEncryptedWithYourOwnKeyWithDenyMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8cbc669-f12d-49eb-93e7-9273119e9933",
        "policyDefinitionReferenceId": "containerBenchmarkMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('containerBenchmarkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6",
          "Azure_Security_Benchmark_v3.0_DS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "policyDefinitionReferenceId": "ASCDependencyAgentAuditWindowsEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('ASCDependencyAgentAuditWindowsEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/04c4380f-3fae-46e8-96c9-30193528f602",
        "policyDefinitionReferenceId": "ASCDependencyAgentAuditLinuxEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('ASCDependencyAgentAuditLinuxEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc5e4038-4584-4632-8c85-c0448d374b2c",
        "policyDefinitionReferenceId": "AzureFirewallEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('AzureFirewallEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "policyDefinitionReferenceId": "ArcWindowsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('ArcWindowsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "policyDefinitionReferenceId": "ArcLinuxMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('ArcLinuxMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4078e558-bda6-41fb-9b3c-361e8875200d",
        "policyDefinitionReferenceId": "ArcWindowsMonitoringByGC",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('ArcWindowsMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e7fed80-8321-4605-b42c-65fc300f23a3",
        "policyDefinitionReferenceId": "ArcLinuxMonitoringByGC",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('ArcLinuxMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e6763cc-5078-4e64-889d-ff4d9a839047",
        "policyDefinitionReferenceId": "keyVaultsAdvancedDataSecurityMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('keyVaultsAdvancedDataSecurityMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-8",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "policyDefinitionReferenceId": "sqlServersAdvancedDataSecurityMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlServersAdvancedDataSecurityMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6581d072-105e-4418-827f-bd446d56421b",
        "policyDefinitionReferenceId": "sqlServersVirtualMachinesAdvancedDataSecurityMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlServersVirtualMachinesAdvancedDataSecurityMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "policyDefinitionReferenceId": "storageAccountsAdvancedDataSecurityMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('storageAccountsAdvancedDataSecurityMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "policyDefinitionReferenceId": "appServicesAdvancedThreatProtectionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('appServicesAdvancedThreatProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "policyDefinitionReferenceId": "containersAdvancedThreatProtectionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('containersAdvancedThreatProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "policyDefinitionReferenceId": "virtualMachinesAdvancedThreatProtectionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('virtualMachinesAdvancedThreatProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_ES-1",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "policyDefinitionReferenceId": "azurePolicyAddonStatus",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azurePolicyAddonStatusEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6b2122c1-8120-4ff5-801b-17625a355590",
        "policyDefinitionReferenceId": "arcEnabledKubernetesClustersShouldHaveAzurePolicyExtensionInstalled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('arcEnabledKubernetesClustersShouldHaveAzurePolicyExtensionInstalledEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469",
        "policyDefinitionReferenceId": "ensureAllowedContainerImagesInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "9.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('allowedContainerImagesInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('allowedContainerImagesNamespaceExclusion')]"
          },
          "allowedContainerImagesRegex": {
            "value": "[parameters('allowedContainerImagesInKubernetesClusterRegex')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
        "policyDefinitionReferenceId": "privilegedContainersShouldBeAvoided",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "9.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('privilegedContainersShouldBeAvoidedEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('privilegedContainerNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "policyDefinitionReferenceId": "allowedServicePortsInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "8.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('allowedServicePortsInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('allowedServicePortsInKubernetesClusterNamespaceExclusion')]"
          },
          "allowedServicePortsList": {
            "value": "[parameters('allowedservicePortsInKubernetesClusterPorts')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164",
        "policyDefinitionReferenceId": "memoryAndCPULimitsInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "9.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('memoryAndCPULimitsInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('memoryAndCPULimitsInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          },
          "memoryLimit": {
            "value": "[parameters('memoryInKubernetesClusterLimit')]"
          },
          "cpuLimit": {
            "value": "[parameters('CPUInKubernetesClusterLimit')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "policyDefinitionReferenceId": "MustRunAsNonRoot",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('MustRunAsNonRootNamespaceEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('MustRunAsNonRootNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          },
          "supplementalGroupsRanges": {
            "value": {
              "ranges": [
                {
                  "max": -1,
                  "min": 1
                }
              ]
            }
          },
          "supplementalGroupsRule": {
            "value": "MayRunAs"
          },
          "runAsGroupRanges": {
            "value": {
              "ranges": [
                {
                  "max": -1,
                  "min": 1
                }
              ]
            }
          },
          "runAsUserRanges": {
            "value": {
              "ranges": []
            }
          },
          "runAsGroupRule": {
            "value": "MayRunAs"
          },
          "runAsUserRule": {
            "value": "MustRunAsNonRoot"
          },
          "fsGroupRanges": {
            "value": {
              "ranges": [
                {
                  "max": -1,
                  "min": 1
                }
              ]
            }
          },
          "fsGroupRule": {
            "value": "MayRunAs"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "policyDefinitionReferenceId": "arcEnabledKubernetesClustersShouldHaveAzureDefendersExtensionInstalled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('arcEnabledKubernetesClustersShouldHaveAzureDefendersExtensionInstalled')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "policyDefinitionReferenceId": "azureKubernetesServiceClustersShouldHaveSecurityProfileEnabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureKubernetesServiceClustersShouldHaveSecurityProfileEnabled')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "policyDefinitionReferenceId": "containerRegistryVulnerabilityAssessment",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('containerRegistryVulnerabilityAssessmentEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6",
          "Azure_Security_Benchmark_v3.0_DS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/090c7b07-b4ed-4561-ad20-e9075f3ccaff",
        "policyDefinitionReferenceId": "azureContainerRegistryVulnerabilityAssessment",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureContainerRegistryVulnerabilityAssessmentEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6",
          "Azure_Security_Benchmark_v3.0_DS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "policyDefinitionReferenceId": "kubernetesRunningImagesVulnerabilityAssessment",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesRunningImagesVulnerabilityAssessmentEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6",
          "Azure_Security_Benchmark_v3.0_DS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/17f4b1cc-c55c-4d94-b1f9-2978f6ac2957",
        "policyDefinitionReferenceId": "kubernetesRunningImagesVulnerabilityMDVMAssessment",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesRunningImagesVulnerabilityMDVMAssessmentEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-6",
          "Azure_Security_Benchmark_v3.0_DS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "policyDefinitionReferenceId": "NoPrivilegeEscalationInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "7.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('NoPrivilegeEscalationInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('NoPrivilegeEscalationInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "policyDefinitionReferenceId": "NoSharingSensitiveHostNamespacesInKubernetes",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('NoSharingSensitiveHostNamespacesInKubernetesEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('NoSharingSensitiveHostNamespacesInKubernetesNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80",
        "policyDefinitionReferenceId": "ReadOnlyRootFileSystemInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('ReadOnlyRootFileSystemInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('ReadOnlyRootFileSystemInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "policyDefinitionReferenceId": "AllowedCapabilitiesInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AllowedCapabilitiesInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('AllowedCapabilitiesInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          },
          "requiredDropCapabilities": {
            "value": "[parameters('DropCapabilitiesInKubernetesClusterList')]"
          },
          "allowedCapabilities": {
            "value": "[parameters('AllowedCapabilitiesInKubernetesClusterList')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e",
        "policyDefinitionReferenceId": "AllowedAppArmorProfilesInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AllowedAppArmorProfilesInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('AllowedAppArmorProfilesInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          },
          "allowedProfiles": {
            "value": "[parameters('AllowedAppArmorProfilesInKubernetesClusterList')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "policyDefinitionReferenceId": "AllowedHostNetworkingAndPortsInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AllowedHostNetworkingAndPortsInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('AllowedHostNetworkingAndPortsInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          },
          "allowHostNetwork": {
            "value": "[parameters('AllowHostNetworkingInKubernetesCluster')]"
          },
          "maxPort": {
            "value": "[parameters('AllowedHostMaxPortInKubernetesCluster')]"
          },
          "minPort": {
            "value": "[parameters('AllowedHostMinPortInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75",
        "policyDefinitionReferenceId": "AllowedHostPathVolumesInKubernetesCluster",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AllowedHostPathVolumesInKubernetesClusterEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('AllowedHostPathVolumesInKubernetesClusterNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          },
          "allowedHostPaths": {
            "value": "[parameters('AllowedHostPathVolumesInKubernetesClusterList')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "policyDefinitionReferenceId": "StorageDisallowPublicAccess",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('disallowPublicBlobAccessEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/013e242c-8828-4970-87b3-ab247555486d",
        "policyDefinitionReferenceId": "azureBackupShouldBeEnabledForVirtualMachinesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureBackupShouldBeEnabledForVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_BR-1",
          "Azure_Security_Benchmark_v3.0_BR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "policyDefinitionReferenceId": "managedIdentityShouldBeUsedInYourFunctionAppMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('managedIdentityShouldBeUsedInYourFunctionAppMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "policyDefinitionReferenceId": "georedundantBackupShouldBeEnabledForAzureDatabaseForMariadbMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('georedundantBackupShouldBeEnabledForAzureDatabaseForMariadbMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_BR-1",
          "Azure_Security_Benchmark_v3.0_BR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
        "policyDefinitionReferenceId": "managedIdentityShouldBeUsedInYourWebAppMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('managedIdentityShouldBeUsedInYourWebAppMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/48af4db5-9b8b-401c-8e74-076be876a430",
        "policyDefinitionReferenceId": "georedundantBackupShouldBeEnabledForAzureDatabaseForPostgresqlMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('georedundantBackupShouldBeEnabledForAzureDatabaseForPostgresqlMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_BR-1",
          "Azure_Security_Benchmark_v3.0_BR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "policyDefinitionReferenceId": "ensureWEBAppHasClientCertificatesIncomingClientCertificatesSetToOnMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('ensureWEBAppHasClientCertificatesIncomingClientCertificatesSetToOnMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82339799-d096-41ae-8538-b108becf0970",
        "policyDefinitionReferenceId": "georedundantBackupShouldBeEnabledForAzureDatabaseForMysqlMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('georedundantBackupShouldBeEnabledForAzureDatabaseForMysqlMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_BR-1",
          "Azure_Security_Benchmark_v3.0_BR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "policyDefinitionReferenceId": "diagnosticLogsInAppServicesShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticLogsInAppServicesShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "policyDefinitionReferenceId": "enforceSSLConnectionShouldBeEnabledForPostgresqlDatabaseServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('enforceSSLConnectionShouldBeEnabledForPostgresqlDatabaseServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "policyDefinitionReferenceId": "enforceSSLConnectionShouldBeEnabledForMysqlDatabaseServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('enforceSSLConnectionShouldBeEnabledForMysqlDatabaseServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "policyDefinitionReferenceId": "latestTLSVersionShouldBeUsedInYourWebAppMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('latestTLSVersionShouldBeUsedInYourWebAppMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-8",
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
        "policyDefinitionReferenceId": "latestTLSVersionShouldBeUsedInYourFunctionAppMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('latestTLSVersionShouldBeUsedInYourFunctionAppMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-8",
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b",
        "policyDefinitionReferenceId": "privateEndpointShouldBeEnabledForPostgresqlServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('privateEndpointShouldBeEnabledForPostgresqlServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990",
        "policyDefinitionReferenceId": "privateEndpointShouldBeEnabledForMariadbServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('privateEndpointShouldBeEnabledForMariadbServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7595c971-233d-4bcf-bd18-596129188c49",
        "policyDefinitionReferenceId": "privateEndpointShouldBeEnabledForMysqlServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('privateEndpointShouldBeEnabledForMysqlServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/89099bee-89e0-4b26-a5f4-165451757743",
        "policyDefinitionReferenceId": "sQLServersShouldBeConfiguredWithAuditingRetentionDaysGreaterThan90DaysMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('sQLServersShouldBeConfiguredWithAuditingRetentionDaysGreaterThan90DaysMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15",
        "policyDefinitionReferenceId": "fTPSOnlyShouldBeRequiredInYourFunctionAppMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('fTPSOnlyShouldBeRequiredInYourFunctionAppMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "policyDefinitionReferenceId": "fTPSShouldBeRequiredInYourWebAppMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('fTPSShouldBeRequiredInYourWebAppMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "policyDefinitionReferenceId": "functionAppsShouldHaveClientCertificatesEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppsShouldHaveClientCertificatesEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "policyDefinitionReferenceId": "cognitiveServicesAccountsShouldEnableDataEncryptionWithACustomerManagedKeyMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('cognitiveServicesAccountsShouldEnableDataEncryptionWithACustomerManagedKeyMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "policyDefinitionReferenceId": "azureCosmosDbAccountsShouldUseCustomerManagedKeysToEncryptDataAtRestMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureCosmosDbAccountsShouldUseCustomerManagedKeysToEncryptDataAtRestMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "policyDefinitionReferenceId": "azureCosmosDbAccountsShouldHaveLocalAuthenticationMethodsDisabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureCosmosDbAccountsShouldHaveLocalAuthenticationMethodsDisabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "policyDefinitionReferenceId": "keyVaultsShouldHavePurgeProtectionEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('keyVaultsShouldHavePurgeProtectionEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-8"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "policyDefinitionReferenceId": "keyVaultsShouldHaveSoftDeleteEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('keyVaultsShouldHaveSoftDeleteEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-8"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "policyDefinitionReferenceId": "azureCacheForRedisShouldUsePrivateEndpointMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureCacheForRedisShouldUsePrivateEndpointMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25",
        "policyDefinitionReferenceId": "storageAccountsShouldUseCustomerManagedKeyForEncryptionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('storageAccountsShouldUseCustomerManagedKeyForEncryptionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "policyDefinitionReferenceId": "storageAccountsShouldRestrictNetworkAccessUsingVirtualNetworkRulesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('storageAccountsShouldRestrictNetworkAccessUsingVirtualNetworkRulesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "policyDefinitionReferenceId": "containerRegistriesShouldBeEncryptedWithACustomerManagedKeyMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('containerRegistriesShouldBeEncryptedWithACustomerManagedKeyMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "policyDefinitionReferenceId": "containerRegistriesShouldNotAllowUnrestrictedNetworkAccessMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('containerRegistriesShouldNotAllowUnrestrictedNetworkAccessMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "policyDefinitionReferenceId": "containerRegistriesShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('containerRegistriesShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca610c1d-041c-4332-9d88-7ed3094967c7",
        "policyDefinitionReferenceId": "appConfigurationShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('appConfigurationShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9830b652-8523-49cc-b1b3-e17dce1127ca",
        "policyDefinitionReferenceId": "azureEventGridDomainsShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureEventGridDomainsShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4b90e17e-8448-49db-875e-bd83fb6f804f",
        "policyDefinitionReferenceId": "azureEventGridTopicsShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureEventGridTopicsShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "policyDefinitionReferenceId": "azureSignalRServiceShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureSignalRServiceShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "policyDefinitionReferenceId": "azureMachineLearningWorkspacesShouldBeEncryptedWithACustomerManagedKeyMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureMachineLearningWorkspacesShouldBeEncryptedWithACustomerManagedKeyMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/45e05259-1eb5-4f70-9574-baf73e9d219b",
        "policyDefinitionReferenceId": "azureMachineLearningWorkspacesShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureMachineLearningWorkspacesShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "policyDefinitionReferenceId": "webApplicationFirewallShouldBeEnabledForAzureFrontDoorServiceServiceMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('webApplicationFirewallShouldBeEnabledForAzureFrontDoorServiceServiceMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "policyDefinitionReferenceId": "webApplicationFirewallShouldBeEnabledForApplicationGatewayMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('webApplicationFirewallShouldBeEnabledForApplicationGatewayMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "policyDefinitionReferenceId": "publicNetworkAccessShouldBeDisabledForMariaDbServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('publicNetworkAccessShouldBeDisabledForMariaDbServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d9844e8a-1437-4aeb-a32c-0c992f056095",
        "policyDefinitionReferenceId": "publicNetworkAccessShouldBeDisabledForMySqlServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('publicNetworkAccessShouldBeDisabledForMySqlServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "policyDefinitionReferenceId": "bringYourOwnKeyDataProtectionShouldBeEnabledForMySqlServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('bringYourOwnKeyDataProtectionShouldBeEnabledForMySqlServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "policyDefinitionReferenceId": "publicNetworkAccessShouldBeDisabledForPostgreSqlServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('publicNetworkAccessShouldBeDisabledForPostgreSqlServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "policyDefinitionReferenceId": "bringYourOwnKeyDataProtectionShouldBeEnabledForPostgreSqlServersMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('bringYourOwnKeyDataProtectionShouldBeEnabledForPostgreSqlServersMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2154edb9-244f-4741-9970-660785bccdaa",
        "policyDefinitionReferenceId": "vmImageBuilderTemplatesShouldUsePrivateLinkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('vmImageBuilderTemplatesShouldUsePrivateLinkMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490",
        "policyDefinitionReferenceId": "firewallShouldBeEnabledOnKeyVaultMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('firewallShouldBeEnabledOnKeyVaultMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2",
          "Azure_Security_Benchmark_v3.0_DP-8"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6abeaec-4d90-4a02-805f-6b26c4d3fbe9",
        "policyDefinitionReferenceId": "privateEndpointShouldBeConfiguredForKeyVaultMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "audit_effect": {
            "value": "[parameters('privateEndpointShouldBeConfiguredForKeyVaultMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2",
          "Azure_Security_Benchmark_v3.0_DP-8"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "policyDefinitionReferenceId": "azureSpringCloudShouldUseNetworkInjectionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureSpringCloudShouldUseNetworkInjectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "policyDefinitionReferenceId": "subscriptionsShouldHaveAContactEmailAddressForSecurityIssuesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('subscriptionsShouldHaveAContactEmailAddressForSecurityIssuesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/475aae12-b88a-4572-8b36-9b712b2b3a17",
        "policyDefinitionReferenceId": "autoProvisioningOfTheLogAnalyticsAgentShouldBeEnabledOnYourSubscriptionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('autoProvisioningOfTheLogAnalyticsAgentShouldBeEnabledOnYourSubscriptionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "policyDefinitionReferenceId": "emailNotificationForHighSeverityAlertsShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('emailNotificationForHighSeverityAlertsShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b15565f-aa9e-48ba-8619-45960f2c314d",
        "policyDefinitionReferenceId": "emailNotificationToSubscriptionOwnerForHighSeverityAlertsShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('emailNotificationToSubscriptionOwnerForHighSeverityAlertsShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IR-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "policyDefinitionReferenceId": "storageAccountShouldUseAPrivateLinkConnectionMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('storageAccountShouldUseAPrivateLinkConnectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "policyDefinitionReferenceId": "authenticationToLinuxMachinesShouldRequireSSHKeysMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('authenticationToLinuxMachinesShouldRequireSSHKeysMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7698e800-9299-47a6-b3b6-5a0fee576eed",
        "policyDefinitionReferenceId": "privateEndpointConnectionsOnAzureSQLDatabaseShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('privateEndpointConnectionsOnAzureSQLDatabaseShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "policyDefinitionReferenceId": "publicNetworkAccessOnAzureSQLDatabaseShouldBeDisabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('publicNetworkAccessOnAzureSQLDatabaseShouldBeDisabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "policyDefinitionReferenceId": "kubernetesClustersShouldBeAccessibleOnlyOverHTTPSMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "8.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesClustersShouldBeAccessibleOnlyOverHTTPSMonitoringEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('kubernetesClustersShouldBeAccessibleOnlyOverHTTPSExcludedNamespaces')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "policyDefinitionReferenceId": "windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsMonitoringEffect')]"
          },
          "includeArcMachines": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsIncludeArcMachines')]"
          },
          "minimumTLSVersion": {
            "value": "[parameters('windowsWebServersShouldBeConfiguredToUseSecureCommunicationProtocolsMinimumTLSVersion')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "policyDefinitionReferenceId": "cognitiveServicesAccountsShouldRestrictNetworkAccessMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('cognitiveServicesAccountsShouldRestrictNetworkAccessMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "policyDefinitionReferenceId": "publicNetworkAccessShouldBeDisabledForCognitiveServicesAccountsMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('publicNetworkAccessShouldBeDisabledForCognitiveServicesAccountsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "policyDefinitionReferenceId": "aPIManagementServicesShouldUseAVirtualNetworkMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('aPIManagementServicesShouldUseAVirtualNetworkMonitoringEffect')]"
          },
          "evaluatedSkuNames": {
            "value": "[parameters('aPIManagementServicesShouldUseAVirtualNetworkEvaluatedSkuNames')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "policyDefinitionReferenceId": "azureCosmosDBAccountsShouldHaveFirewallRulesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('azureCosmosDBAccountsShouldHaveFirewallRulesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "policyDefinitionReferenceId": "networkWatcherShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('networkWatcherShouldBeEnabledMonitoringEffect')]"
          },
          "resourceGroupName": {
            "value": "[parameters('networkWatcherShouldBeEnabledResourceGroupName')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IR-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/afe0c3be-ba3b-4544-ba52-0c99672a8ad6",
        "policyDefinitionReferenceId": "resourceLogsInAzureMachineLearningWorkspacesShouldBeEnabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/438c38d2-3772-465a-a9cc-7a6666a275ce",
        "policyDefinitionReferenceId": "azureMachineLearningWorkspacesShouldDisablePublicNetworkAccess",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7804b5c7-01dc-4723-969b-ae300cc07ff1",
        "policyDefinitionReferenceId": "azureMachineLearningComputesShouldBeInAVirtualNetwork",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e96a9a5f-07ca-471b-9bc5-6a0f33cbd68f",
        "policyDefinitionReferenceId": "azureMachineLearningComputesShouldHaveLocalAuthenticationMethodsDisabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f110a506-2dcb-422e-bcea-d533fc8c35e2",
        "policyDefinitionReferenceId": "azureMachineLearningComputeInstancesshouldUseTheLatestOsImage",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/138ff14d-b687-4faa-a81c-898c91a87fa2",
        "policyDefinitionReferenceId": "resourceLogsInAzureDatabricksWorkspacesShouldBeEnabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e7849de-b939-4c50-ab48-fc6b0f5eeba2",
        "policyDefinitionReferenceId": "azureDatabricksWorkspacesShouldDisablePublicNetworkAccess",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/51c1490f-3319-459c-bbbc-7f391bbed753",
        "policyDefinitionReferenceId": "azureDatabricksClustersShouldDisablePublicIp",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9c25c9e4-ee12-4882-afd2-11fb9d87893f",
        "policyDefinitionReferenceId": "azureDatabricksWorkspacesShouldBeInAVirtualNetwork",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/258823f2-4595-4b52-b333-cc96192710d8",
        "policyDefinitionReferenceId": "azureDatabricksWorkspacesShouldUsePrivateLink",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3d20c29-b36d-48fe-808b-99a87530ad99",
        "policyDefinitionReferenceId": "AzureDefenderForResourceManagerShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AzureDefenderForResourceManagerShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bdc59948-5574-49b3-bb91-76b7c986428d",
        "policyDefinitionReferenceId": "AzureDefenderForDNSShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AzureDefenderForDNSShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-10",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373",
        "policyDefinitionReferenceId": "KubernetesClustersShouldNotUseTheDefaultNamespaceMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('KubernetesClustersShouldNotUseTheDefaultNamespaceMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423",
        "policyDefinitionReferenceId": "KubernetesClustersShouldDisableAutomountingAPICredentialsMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('KubernetesClustersShouldDisableAutomountingAPICredentialsMonitoringEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('KubernetesClustersShouldDisableAutomountingAPICredentialsMonitoringNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626",
        "policyDefinitionReferenceId": "KubernetesClustersShouldNotGrantCAPSYSADMINSecurityCapabilitiesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('KubernetesClustersShouldNotGrantCAPSYSADMINSecurityCapabilitiesMonitoringEffect')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('KubernetesClustersShouldNotGrantCAPSYSADMINSecurityCapabilitiesMonitoringNamespaceExclusion')]"
          },
          "excludedImages": {
            "value": "[parameters('excludedImagesInKubernetesCluster')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "policyDefinitionReferenceId": "VtpmShouldBeEnabledOnSupportedVirtualMachinesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('VtpmShouldBeEnabledOnSupportedVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "policyDefinitionReferenceId": "previewSecureBootShouldBeEnabledOnSupportedWindowsVirtualMachinesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('SecureBootShouldBeEnabledOnSupportedWindowsVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "policyDefinitionReferenceId": "GuestAttestationExtensionShouldBeInstalledOnSupportedLinuxVirtualMachinesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "6.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('GuestAttestationExtensionShouldBeInstalledOnSupportedLinuxVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "policyDefinitionReferenceId": "GuestAttestationExtensionShouldBeInstalledOnSupportedLinuxVirtualMachinesScaleSetsMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "5.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('GuestAttestationExtensionShouldBeInstalledOnSupportedLinuxVirtualMachinesScaleSetsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "policyDefinitionReferenceId": "GuestAttestationExtensionShouldBeInstalledOnSupportedWindowsVirtualMachinesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "4.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('GuestAttestationExtensionShouldBeInstalledOnSupportedWindowsVirtualMachinesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f655e522-adff-494d-95c2-52d4f6d56a42",
        "policyDefinitionReferenceId": "GuestAttestationExtensionShouldBeInstalledOnSupportedWindowsVirtualMachinesScaleSetsMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('GuestAttestationExtensionShouldBeInstalledOnSupportedWindowsVirtualMachinesScaleSetsMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/13a6c84f-49a5-410a-b5df-5b880c3fe009",
        "policyDefinitionReferenceId": "LinuxVirtualMachineShouldUseSignedAndTrustedBootComponentEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('LinuxVirtualMachineShouldUseSignedAndTrustedBootComponentEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "policyDefinitionReferenceId": "installEndpointProtection",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('installEndpointProtectionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_ES-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "policyDefinitionReferenceId": "endpointProtectionHealthIssuesMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('endpointProtectionHealthIssuesMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_ES-2",
          "Azure_Security_Benchmark_v3.0_ES-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "policyDefinitionReferenceId": "diagnosticsLogsInKubernetesMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInKubernetesMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInKubernetesRetentionDays')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "policyDefinitionReferenceId": "AzureDefenderForOpenSourceRelationalDatabasesShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('AzureDefenderForOpenSourceRelationalDatabasesShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f90fc71-a595-4066-8974-d4d0802e8ef0",
        "policyDefinitionReferenceId": "MicrosoftDefenderCSPMShouldBeEnabledMonitoringEffect",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": {
          "effect": {
            "value": "[parameters('MicrosoftDefenderCSPMShouldBeEnabledMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca88aadc-6e2b-416c-9de2-5a0f01d1693f",
        "policyDefinitionReferenceId": "gcLinuxDiskEncryptionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('gcLinuxDiskEncryptionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3dc5edcd-002d-444c-b216-e123bbfa37c0",
        "policyDefinitionReferenceId": "gcWindowsDiskEncryptionMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "effect": {
            "value": "[parameters('gcWindowsDiskEncryptionMonitoringEffect')]"
          }
        },
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abda6d70-9778-44e7-84a8-06713e6db027",
        "policyDefinitionReferenceId": "sqlServerADOnlyEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/146412e9-005c-472b-9e48-c87b72ac229e",
        "policyDefinitionReferenceId": "mySqlServerADAdminisMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4dec045-250a-48c2-b5cc-e0c4eec8b5b4",
        "policyDefinitionReferenceId": "postgreSqlServerADAdminisMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/78215662-041e-49ed-a9dd-5385911b3a1f",
        "policyDefinitionReferenceId": "sqlManagedInstanceADOnlyEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2158ddbe-fefa-408e-b43f-d4faef8ff3b8",
        "policyDefinitionReferenceId": "synapseWorkspaceADOnlyEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3aa03346-d8c5-4994-a5bc-7652c2a2aef1",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldNotHaveAllApisScopedSubscriptions",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PA-7"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/92bb331d-ac71-416a-8c91-02f2cb734ce4",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldNotBypassCertificateValidation",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ee7495e7-3ba7-40b6-bfee-c29e22cc75d4",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldUseEncryptedProtocols",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f1cc7827-022c-473e-836e-5a51cae0b249",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldUseKeyVaultForSecretNamedValues",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-8",
          "Azure_Security_Benchmark_v3.0_DP-6"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b741306c-968e-4b67-b916-5675e5c709f4",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldHaveDirectManagementEndpointDisabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df73bd95-24da-4a4f-96b9-4e8b94b402bd",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldDisableServiceConfigurationEndpoints",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/549814b6-3212-4203-bdc8-1548d342fb67",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldHaveMinimumAPIVersionSet",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-8",
          "Azure_Security_Benchmark_v3.0_PV-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c15dcc82-b93c-4dcb-9332-fbf121685b54",
        "policyDefinitionReferenceId": "aPIManagementServiceShouldHaveBackendCallsAuthenticated",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/40e85574-ef33-47e8-a854-7a65c7500560",
        "policyDefinitionReferenceId": "mySqlServerADOnlyEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3ac7c827-eea2-4bde-acc7-9568cd320efa",
        "policyDefinitionReferenceId": "serverSecretFindingsMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_PV-5",
          "Azure_Security_Benchmark_v3.0_IM-8"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c8acafaf-3d23-44d1-9624-978ef0f8652c",
        "policyDefinitionReferenceId": "unusedApisShouldbeDisabledAndRemovedFromApim",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_AM-3"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8ac833bd-f505-48d5-887e-c993a1d3eea0",
        "policyDefinitionReferenceId": "apimApiEndpointsShouldbeAuthenticated",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*-preview",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/640d2586-54d2-465f-877f-9ffc1d2109f4",
        "policyDefinitionReferenceId": "defenderForStorageShouldBeEnabledMonitoring",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-2",
          "Azure_Security_Benchmark_v3.0_LT-1",
          "Azure_Security_Benchmark_v3.0_LT-2",
          "Azure_Security_Benchmark_v3.0_IR-3",
          "Azure_Security_Benchmark_v3.0_IR-5"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/71ef260a-8f18-47b7-abcb-62d0673d94dc",
        "policyDefinitionReferenceId": "cognitiveServicesAccountsShouldHaveLocalAuthenticationMethodsDisabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cddd188c-4b82-4c48-a19d-ddf74ee66a01",
        "policyDefinitionReferenceId": "cognitiveServicesShouldUsePrivateLink",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "3.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc4d8e41-e223-45ea-9bf5-eada37891d87",
        "policyDefinitionReferenceId": "virtualMachinesAndVirtualMachineScaleSetsShouldHaveEncryptionAtHostEnabled",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a",
        "policyDefinitionReferenceId": "azureCosmosDBShouldDisablePublicNetworkAccess",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/58440f8a-10c5-4151-bdce-dfbaad4a20b7",
        "policyDefinitionReferenceId": "cosmosDBAaccountsShouldUsePrivateLink",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/21a6bc25-125e-4d13-b82d-2e19b7208ab7",
        "policyDefinitionReferenceId": "vPNGatewaysShouldUseOnlyAzureActiveDirectoryAzureADAuthenticationForPointtositeUsers",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/32e6bbec-16b6-44c2-be37-c5b672d103cf",
        "policyDefinitionReferenceId": "azureSQLDatabaseShouldBeRunningTLSVersion12OrNewer",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_DP-3",
          "Azure_Security_Benchmark_v3.0_IM-4"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9dfea752-dd46-4766-aed1-c355fa93fb91",
        "policyDefinitionReferenceId": "azureSQLManagedInstancesShouldDisablePublicNetworkAccess",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "1.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_NS-2"
        ]
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8c6a50c6-9ffd-4ae7-986f-5fa6111f9a54",
        "policyDefinitionReferenceId": "storageAccountsShouldPreventSharedKeyAccess",
        "effectiveDefinitionVersion": null,
        "latestDefinitionVersion": null,
        "definitionVersion": "2.*.*",
        "parameters": null,
        "groupNames": [
          "Azure_Security_Benchmark_v3.0_IM-1"
        ]
      }
    ],
    "policyDefinitionGroups": [
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-8",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-8"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-9",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-9"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_NS-10",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_NS-10"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DP-8",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DP-8"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-8",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-8"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IM-9",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IM-9"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PA-8",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PA-8"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_PV-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_PV-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_LT-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_LT-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_AM-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_AM-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_AM-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_AM-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_AM-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_AM-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_AM-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_AM-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_AM-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_AM-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_ES-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_ES-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_ES-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_ES-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_ES-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_ES-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_BR-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_BR-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_BR-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_BR-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_BR-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_BR-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_BR-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_BR-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_IR-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_IR-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_DS-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_DS-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-1",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-1"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-2",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-2"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-3",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-3"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-4",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-4"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-5",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-5"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-6",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-6"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-7",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-7"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-8",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-8"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-9",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-9"
      },
      {
        "description": null,
        "displayName": null,
        "additionalMetadataId": "/providers/Microsoft.PolicyInsights/policyMetadata/Azure_Security_Benchmark_v3.0_GS-10",
        "category": null,
        "name": "Azure_Security_Benchmark_v3.0_GS-10"
      }
    ],
    "versions": null,
    "oldVersions": null
  },
  "tags": null,
  "identity": null,
  "zones": null,
  "extendedLocation": null
}
